#!/usr/bin/env python
# encoding: utf-8
"""
pssmTest.py

This version has the "right" way of handling insertions.  Should be used as the basis for 
version 2 of the program

Created by Mark Evans on 2011-02-10.
Copyright (c) 2011 __MyCompanyName__. All rights reserved.
"""

import sys,itertools,math
import os
from Bio import SeqIO
from Bio.Alphabet import IUPAC
from Bio.Data import CodonTable
from Bio.Data import IUPACData
import Levenshtein as L
import subprocess
from Bio.Align import AlignInfo
from Bio import AlignIO
from Bio.Align.Applications import ClustalwCommandline
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord

###########################################
# Takes Bio.Seq.Seq object as input       #
# Returns list of all possible proteins   #
###########################################
def generateProtFromAmbiguousDNA(s,codon_table):
   
   # stop_alt is all possible amino acid possibilities for each ambiguous codon combination that could generate either
   # a stop or an amino acid.  These codons will generate Bio.Data.CodonTable.TranslationError from the list_possible_protein
   # function used below.  In addition to these codons, the ambiguous codon TAR generates only a stop. The ambiguous
   # codon TRA also codes only for a stop, but it will generate a KeyError from the CodonTable function.
   
#   stop_alt = {"NNN":["A","C","D","E","F","G","H","I","K","L","M","N","P","Q","R","S","T","V","W","Y"],
#               "TAN":["Y"],"TAS":["Y"],"TAW":["Y"],"TAK":["Y"],"TAM":["Y"],"TAD":["Y"],"TAH":["Y"],"TAB":["Y"],"TAV":["Y"],
#               "TNA":["L","S"],"TSA":["S"],"TWA":["L"],"TKA":["L"],"TMA":["S"],"TDA":["L"],"THA":["L","S"],"TBA":["L","S"],"TVA":["S"],
#               "TNG":["L","S","W"],"TRG":["W"],"TWG":["L"],"TMG":["S"],"TDG":["L","W"],"THG":["L","S"],"TVG":["S","W"],
#               "NAG":["Q","K","E"],"YAG":["Q"],"WAG":["K"],"KAG":["E"],"DAG":["K","E"],"HAG":["Q","K"],"BAG":["Q","E"],
#               "NGA":["R","G"],"YGA":["R"],"WGA":["R"],"KGA":["G"],"DGA":["R","G"],"HGA":["R"],"BGA":["R","G"],
#               "NAA":["Q","K","E"],"YAA":["Q"],"WAA":["K"],"KAA":["E"],"DAA":["K","E"],"HAA":["Q","K"],"BAA":["Q","E"]}
   stop_alt = {
   'KHS': ['D', 'E', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'F', 'L'] ,
   'HMW': ['K', 'N', 'T', 'T', 'Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'HMR': ['K', 'K', 'T', 'T', 'Q', 'Q', 'P', 'P', 'S', 'S'] ,
   'HMS': ['N', 'K', 'T', 'T', 'H', 'Q', 'P', 'P', 'Y', 'S', 'S'] ,
   'YRR': ['Q', 'Q', 'R', 'R', 'W'] ,
   'BMR': ['Q', 'Q', 'P', 'P', 'E', 'E', 'A', 'A', 'S', 'S'] ,
   'BWR': ['Q', 'Q', 'L', 'L', 'E', 'E', 'V', 'V', 'L', 'L'] ,
   'BWS': ['H', 'Q', 'L', 'L', 'D', 'E', 'V', 'V', 'Y', 'F', 'L'] ,
   'BWV': ['Q', 'H', 'Q', 'L', 'L', 'L', 'E', 'D', 'E', 'V', 'V', 'V', 'Y', 'L', 'F', 'L'] ,
   'BWW': ['Q', 'H', 'L', 'L', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'NGA': ['G', 'R', 'R'] ,
   'BWA': ['Q', 'L', 'E', 'V', 'L'] ,
   'BWB': ['H', 'Q', 'H', 'L', 'L', 'L', 'D', 'E', 'D', 'V', 'V', 'V', 'Y', 'Y', 'F', 'L', 'F'] ,
   'BWD': ['Q', 'Q', 'H', 'L', 'L', 'L', 'E', 'E', 'D', 'V', 'V', 'V', 'Y', 'L', 'L', 'F'] ,
   'KRD': ['E', 'E', 'D', 'G', 'G', 'G', 'Y', 'W', 'C'] ,
   'TAB': ['Y', 'Y'] ,
   'BWG': ['Q', 'L', 'E', 'V', 'L'] ,
   'BWH': ['Q', 'H', 'H', 'L', 'L', 'L', 'E', 'D', 'D', 'V', 'V', 'V', 'Y', 'Y', 'L', 'F', 'F'] ,
   'TKR': ['W', 'L', 'L'] ,
   'TAN': ['Y', 'Y'] ,
   'BWK': ['Q', 'H', 'L', 'L', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'TAH': ['Y', 'Y'] ,
   'BWM': ['Q', 'H', 'L', 'L', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'BWN': ['Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'TAK': ['Y'] ,
   'NMV': ['E', 'D', 'E', 'A', 'A', 'A', 'K', 'N', 'K', 'T', 'T', 'T', 'Y', 'S', 'S', 'S', 'Q', 'H', 'Q', 'P', 'P', 'P'] ,
   'NMS': ['D', 'E', 'A', 'A', 'N', 'K', 'T', 'T', 'Y', 'S', 'S', 'H', 'Q', 'P', 'P'] ,
   'TSN': ['S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'TSM': ['S', 'S', 'C'] ,
   'TSH': ['S', 'S', 'S', 'C', 'C'] ,
   'YBR': ['P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'W', 'L', 'L'] ,
   'YBV': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'YBW': ['P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'C', 'L', 'F'] ,
   'YBH': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'YBM': ['P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'C', 'L', 'F'] ,
   'YBN': ['P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'TSV': ['S', 'S', 'S', 'C', 'W'] ,
   'TSW': ['S', 'S', 'C'] ,
   'YBD': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'KBH': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'KBN': ['A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'KBM': ['A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'KBA': ['A', 'G', 'V', 'S', 'L'] ,
   'KBD': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'KBR': ['A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'W', 'L', 'L'] ,
   'BKW': ['R', 'R', 'L', 'L', 'G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'KBV': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'KBW': ['A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'TAV': ['Y'] ,
   'NMN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S', 'S', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P'] ,
   'TAW': ['Y'] ,
   'TAR': [] ,
   'KKW': ['G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'KKV': ['G', 'G', 'G', 'V', 'V', 'V', 'C', 'W', 'L', 'F', 'L'] ,
   'KKR': ['G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'KKM': ['G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'KKN': ['G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'KKH': ['G', 'G', 'G', 'V', 'V', 'V', 'C', 'C', 'L', 'F', 'F'] ,
   'YDV': ['Q', 'H', 'Q', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'KKD': ['G', 'G', 'G', 'V', 'V', 'V', 'W', 'C', 'L', 'L', 'F'] ,
   'KKA': ['G', 'V', 'L'] ,
   'WHD': ['K', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'TAD': ['Y'] ,
   'WHG': ['K', 'T', 'M', 'S', 'L'] ,
   'WHA': ['K', 'T', 'I', 'S', 'L'] ,
   'WHB': ['N', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'WHM': ['K', 'N', 'T', 'T', 'I', 'I', 'Y', 'S', 'S', 'L', 'F'] ,
   'WHN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'M', 'I', 'I', 'I', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'WHH': ['K', 'N', 'N', 'T', 'T', 'T', 'I', 'I', 'I', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'WHK': ['K', 'N', 'T', 'T', 'M', 'I', 'Y', 'S', 'S', 'L', 'F'] ,
   'WHV': ['K', 'N', 'K', 'T', 'T', 'T', 'I', 'I', 'M', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'WHW': ['K', 'N', 'T', 'T', 'I', 'I', 'Y', 'S', 'S', 'L', 'F'] ,
   'WHR': ['K', 'K', 'T', 'T', 'I', 'M', 'S', 'S', 'L', 'L'] ,
   'WHS': ['N', 'K', 'T', 'T', 'I', 'M', 'Y', 'S', 'S', 'F', 'L'] ,
   'TAM': ['Y'] ,
   'YDW': ['Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'C', 'L', 'F'] ,
   'KHA': ['E', 'A', 'V', 'S', 'L'] ,
   'TMA': ['S'] ,
   'KHD': ['E', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'DKV': ['R', 'S', 'R', 'I', 'I', 'M', 'G', 'G', 'G', 'V', 'V', 'V', 'C', 'W', 'L', 'F', 'L'] ,
   'DKW': ['R', 'S', 'I', 'I', 'G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'DKR': ['R', 'R', 'I', 'M', 'G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'DKD': ['R', 'R', 'S', 'I', 'M', 'I', 'G', 'G', 'G', 'V', 'V', 'V', 'W', 'C', 'L', 'L', 'F'] ,
   'DKA': ['R', 'I', 'G', 'V', 'L'] ,
   'DKN': ['R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'DKM': ['R', 'S', 'I', 'I', 'G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'DKH': ['R', 'S', 'S', 'I', 'I', 'I', 'G', 'G', 'G', 'V', 'V', 'V', 'C', 'C', 'L', 'F', 'F'] ,
   'DBH': ['T', 'T', 'T', 'R', 'S', 'S', 'I', 'I', 'I', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'DBM': ['T', 'T', 'R', 'S', 'I', 'I', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'DBN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'DBA': ['T', 'R', 'I', 'A', 'G', 'V', 'S', 'L'] ,
   'DBD': ['T', 'T', 'T', 'R', 'R', 'S', 'I', 'M', 'I', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'DBR': ['T', 'T', 'R', 'R', 'I', 'M', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'W', 'L', 'L'] ,
   'DBW': ['T', 'T', 'R', 'S', 'I', 'I', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'DBV': ['T', 'T', 'T', 'R', 'S', 'R', 'I', 'I', 'M', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'HDW': ['K', 'N', 'R', 'S', 'I', 'I', 'Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'C', 'L', 'F'] ,
   'HDV': ['K', 'N', 'K', 'R', 'S', 'R', 'I', 'I', 'M', 'Q', 'H', 'Q', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'KSW': ['A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'YSH': ['P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'C', 'C'] ,
   'HDS': ['N', 'K', 'S', 'R', 'I', 'M', 'H', 'Q', 'R', 'R', 'L', 'L', 'Y', 'C', 'W', 'F', 'L'] ,
   'YSN': ['P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'YSM': ['P', 'P', 'R', 'R', 'S', 'S', 'C'] ,
   'KSR': ['A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'NGM': ['G', 'G', 'R', 'S', 'C', 'R', 'R'] ,
   'NGN': ['G', 'G', 'G', 'G', 'R', 'R', 'S', 'S', 'W', 'C', 'C', 'R', 'R', 'R', 'R'] ,
   'NGH': ['G', 'G', 'G', 'R', 'S', 'S', 'C', 'C', 'R', 'R', 'R'] ,
   'YSD': ['P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'W', 'C'] ,
   'HDG': ['K', 'R', 'M', 'Q', 'R', 'L', 'W', 'L'] ,
   'KSD': ['A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'W', 'C'] ,
   'NGV': ['G', 'G', 'G', 'R', 'S', 'R', 'C', 'W', 'R', 'R', 'R'] ,
   'HDD': ['K', 'K', 'N', 'R', 'R', 'S', 'I', 'M', 'I', 'Q', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'KSA': ['A', 'G', 'S'] ,
   'HDB': ['N', 'K', 'N', 'S', 'R', 'S', 'I', 'M', 'I', 'H', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'NGR': ['G', 'G', 'R', 'R', 'W', 'R', 'R'] ,
   'KSM': ['A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'YSR': ['P', 'P', 'R', 'R', 'S', 'S', 'W'] ,
   'HDM': ['K', 'N', 'R', 'S', 'I', 'I', 'Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'C', 'L', 'F'] ,
   'KSN': ['A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'YSW': ['P', 'P', 'R', 'R', 'S', 'S', 'C'] ,
   'YSV': ['P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'C', 'W'] ,
   'HDH': ['K', 'N', 'N', 'R', 'S', 'S', 'I', 'I', 'I', 'Q', 'H', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'BMB': ['H', 'Q', 'H', 'P', 'P', 'P', 'D', 'E', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S'] ,
   'TKD': ['W', 'C', 'L', 'L', 'F'] ,
   'BMA': ['Q', 'P', 'E', 'A', 'S'] ,
   'BMG': ['Q', 'P', 'E', 'A', 'S'] ,
   'BMD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'E', 'E', 'D', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'TKA': ['L'] ,
   'TKN': ['W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'BMK': ['Q', 'H', 'P', 'P', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'HMV': ['K', 'N', 'K', 'T', 'T', 'T', 'Q', 'H', 'Q', 'P', 'P', 'P', 'Y', 'S', 'S', 'S'] ,
   'TKM': ['C', 'L', 'F'] ,
   'BMN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'TKH': ['C', 'C', 'L', 'F', 'F'] ,
   'BMM': ['Q', 'H', 'P', 'P', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'TKV': ['C', 'W', 'L', 'F', 'L'] ,
   'HMM': ['K', 'N', 'T', 'T', 'Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'HMN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'BMV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'E', 'D', 'E', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'BMW': ['Q', 'H', 'P', 'P', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'HMK': ['K', 'N', 'T', 'T', 'Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'HMD': ['K', 'K', 'N', 'T', 'T', 'T', 'Q', 'Q', 'H', 'P', 'P', 'P', 'Y', 'S', 'S', 'S'] ,
   'HMG': ['K', 'T', 'Q', 'P', 'S'] ,
   'HMA': ['K', 'T', 'Q', 'P', 'S'] ,
   'HMB': ['N', 'K', 'N', 'T', 'T', 'T', 'H', 'Q', 'H', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S'] ,
   'TBR': ['S', 'S', 'W', 'L', 'L'] ,
   'TBW': ['S', 'S', 'C', 'L', 'F'] ,
   'TBV': ['S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'TBH': ['S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'TBM': ['S', 'S', 'C', 'L', 'F'] ,
   'TBN': ['S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'TBA': ['S', 'L'] ,
   'TBD': ['S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'YHK': ['Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'YHH': ['Q', 'H', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'YHN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'L', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'YHM': ['Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'YHB': ['H', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'YHA': ['Q', 'P', 'L', 'S', 'L'] ,
   'YHG': ['Q', 'P', 'L', 'S', 'L'] ,
   'YHD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'YHR': ['Q', 'Q', 'P', 'P', 'L', 'L', 'S', 'S', 'L', 'L'] ,
   'YHS': ['H', 'Q', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'F', 'L'] ,
   'YHV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'YHW': ['Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'TSD': ['S', 'S', 'S', 'W', 'C'] ,
   'BBN': ['P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'BBM': ['P', 'P', 'R', 'R', 'L', 'L', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'BBH': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'YAW': ['Q', 'H', 'Y'] ,
   'BBD': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'YAS': ['H', 'Q', 'Y'] ,
   'YAR': ['Q', 'Q'] ,
   'YAM': ['Q', 'H', 'Y'] ,
   'YAN': ['Q', 'Q', 'H', 'H', 'Y', 'Y'] ,
   'YAH': ['Q', 'H', 'H', 'Y', 'Y'] ,
   'YAK': ['Q', 'H', 'Y'] ,
   'BBW': ['P', 'P', 'R', 'R', 'L', 'L', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'C', 'L', 'F'] ,
   'BBV': ['P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'YAG': ['Q'] ,
   'NNA': ['G', 'E', 'V', 'A', 'R', 'K', 'I', 'T', 'L', 'S', 'R', 'Q', 'L', 'P'] ,
   'YAA': ['Q'] ,
   'BBR': ['P', 'P', 'R', 'R', 'L', 'L', 'A', 'A', 'G', 'G', 'V', 'V', 'S', 'S', 'W', 'L', 'L'] ,
   'YAB': ['H', 'Q', 'H', 'Y', 'Y'] ,
   'HVH': ['K', 'N', 'N', 'T', 'T', 'T', 'R', 'S', 'S', 'Q', 'H', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'HVK': ['K', 'N', 'T', 'T', 'R', 'S', 'Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'W', 'C'] ,
   'HVM': ['K', 'N', 'T', 'T', 'R', 'S', 'Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C'] ,
   'HVN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'HVA': ['K', 'T', 'R', 'Q', 'P', 'R', 'S'] ,
   'HVB': ['N', 'K', 'N', 'T', 'T', 'T', 'S', 'R', 'S', 'H', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'HVD': ['K', 'K', 'N', 'T', 'T', 'T', 'R', 'R', 'S', 'Q', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'HVG': ['K', 'T', 'R', 'Q', 'P', 'R', 'S', 'W'] ,
   'HVS': ['N', 'K', 'T', 'T', 'S', 'R', 'H', 'Q', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C', 'W'] ,
   'HVR': ['K', 'K', 'T', 'T', 'R', 'R', 'Q', 'Q', 'P', 'P', 'R', 'R', 'S', 'S', 'W'] ,
   'HVW': ['K', 'N', 'T', 'T', 'R', 'S', 'Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C'] ,
   'HVV': ['K', 'N', 'K', 'T', 'T', 'T', 'R', 'S', 'R', 'Q', 'H', 'Q', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'WBV': ['T', 'T', 'T', 'R', 'S', 'R', 'I', 'I', 'M', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'WBW': ['T', 'T', 'R', 'S', 'I', 'I', 'S', 'S', 'C', 'L', 'F'] ,
   'WBR': ['T', 'T', 'R', 'R', 'I', 'M', 'S', 'S', 'W', 'L', 'L'] ,
   'DAK': ['K', 'N', 'E', 'D', 'Y'] ,
   'WBD': ['T', 'T', 'T', 'R', 'R', 'S', 'I', 'M', 'I', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'YBA': ['P', 'R', 'L', 'S', 'L'] ,
   'WBN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'WBM': ['T', 'T', 'R', 'S', 'I', 'I', 'S', 'S', 'C', 'L', 'F'] ,
   'WBH': ['T', 'T', 'T', 'R', 'S', 'S', 'I', 'I', 'I', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'YDB': ['H', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'TSR': ['S', 'S', 'W'] ,
   'YRA': ['Q', 'R'] ,
   'YAV': ['Q', 'H', 'Q', 'Y'] ,
   'BBA': ['P', 'R', 'L', 'A', 'G', 'V', 'S', 'L'] ,
   'WKH': ['R', 'S', 'S', 'I', 'I', 'I', 'C', 'C', 'L', 'F', 'F'] ,
   'WKM': ['R', 'S', 'I', 'I', 'C', 'L', 'F'] ,
   'WKN': ['R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'WKA': ['R', 'I', 'L'] ,
   'WKD': ['R', 'R', 'S', 'I', 'M', 'I', 'W', 'C', 'L', 'L', 'F'] ,
   'KNG': ['G', 'E', 'V', 'A', 'W', 'L', 'S'] ,
   'YDA': ['Q', 'R', 'L', 'L'] ,
   'WKR': ['R', 'R', 'I', 'M', 'W', 'L', 'L'] ,
   'WKW': ['R', 'S', 'I', 'I', 'C', 'L', 'F'] ,
   'WKV': ['R', 'S', 'R', 'I', 'I', 'M', 'C', 'W', 'L', 'F', 'L'] ,
   'NAB': ['D', 'E', 'D', 'N', 'K', 'N', 'Y', 'Y', 'H', 'Q', 'H'] ,
   'NAA': ['E', 'K', 'Q'] ,
   'YAD': ['Q', 'Q', 'H', 'Y'] ,
   'NAG': ['E', 'K', 'Q'] ,
   'NAK': ['E', 'D', 'K', 'N', 'Y', 'Q', 'H'] ,
   'WDK': ['K', 'N', 'R', 'S', 'M', 'I', 'Y', 'W', 'C', 'L', 'F'] ,
   'HBA': ['T', 'R', 'I', 'P', 'R', 'L', 'S', 'L'] ,
   'WDN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'WDR': ['K', 'K', 'R', 'R', 'I', 'M', 'W', 'L', 'L'] ,
   'DMA': ['K', 'T', 'E', 'A', 'S'] ,
   'DMB': ['N', 'K', 'N', 'T', 'T', 'T', 'D', 'E', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S'] ,
   'DMD': ['K', 'K', 'N', 'T', 'T', 'T', 'E', 'E', 'D', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'DMG': ['K', 'T', 'E', 'A', 'S'] ,
   'DMH': ['K', 'N', 'N', 'T', 'T', 'T', 'E', 'D', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S'] ,
   'DMK': ['K', 'N', 'T', 'T', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'DMM': ['K', 'N', 'T', 'T', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'DMN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'DMR': ['K', 'K', 'T', 'T', 'E', 'E', 'A', 'A', 'S', 'S'] ,
   'DMS': ['N', 'K', 'T', 'T', 'D', 'E', 'A', 'A', 'Y', 'S', 'S'] ,
   'DMV': ['K', 'N', 'K', 'T', 'T', 'T', 'E', 'D', 'E', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'DMW': ['K', 'N', 'T', 'T', 'E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'WGM': ['R', 'S', 'C'] ,
   'DDS': ['N', 'K', 'S', 'R', 'I', 'M', 'D', 'E', 'G', 'G', 'V', 'V', 'Y', 'C', 'W', 'F', 'L'] ,
   'DDR': ['K', 'K', 'R', 'R', 'I', 'M', 'E', 'E', 'G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'DDW': ['K', 'N', 'R', 'S', 'I', 'I', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'DDV': ['K', 'N', 'K', 'R', 'S', 'R', 'I', 'I', 'M', 'E', 'D', 'E', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'DDK': ['K', 'N', 'R', 'S', 'M', 'I', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'W', 'C', 'L', 'F'] ,
   'DDH': ['K', 'N', 'N', 'R', 'S', 'S', 'I', 'I', 'I', 'E', 'D', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'DDN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'DDM': ['K', 'N', 'R', 'S', 'I', 'I', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'DDB': ['N', 'K', 'N', 'S', 'R', 'S', 'I', 'M', 'I', 'D', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'DDA': ['K', 'R', 'I', 'E', 'G', 'V', 'L'] ,
   'DDG': ['K', 'R', 'M', 'E', 'G', 'V', 'W', 'L'] ,
   'DDD': ['K', 'K', 'N', 'R', 'R', 'S', 'I', 'M', 'I', 'E', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'NVW': ['E', 'D', 'A', 'A', 'G', 'G', 'K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'C', 'Q', 'H', 'P', 'P', 'R', 'R'] ,
   'NVV': ['E', 'D', 'E', 'A', 'A', 'A', 'G', 'G', 'G', 'K', 'N', 'K', 'T', 'T', 'T', 'R', 'S', 'R', 'Y', 'S', 'S', 'S', 'C', 'W', 'Q', 'H', 'Q', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NVS': ['D', 'E', 'A', 'A', 'G', 'G', 'N', 'K', 'T', 'T', 'S', 'R', 'Y', 'S', 'S', 'C', 'W', 'H', 'Q', 'P', 'P', 'R', 'R'] ,
   'NVR': ['E', 'E', 'A', 'A', 'G', 'G', 'K', 'K', 'T', 'T', 'R', 'R', 'S', 'S', 'W', 'Q', 'Q', 'P', 'P', 'R', 'R'] ,
   'NVG': ['E', 'A', 'G', 'K', 'T', 'R', 'S', 'W', 'Q', 'P', 'R'] ,
   'NNG': ['G', 'E', 'V', 'A', 'R', 'K', 'M', 'T', 'W', 'L', 'S', 'R', 'Q', 'L', 'P'] ,
   'WGV': ['R', 'S', 'R', 'C', 'W'] ,
   'NVB': ['D', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'N', 'K', 'N', 'T', 'T', 'T', 'S', 'R', 'S', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C', 'H', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NVA': ['E', 'A', 'G', 'K', 'T', 'R', 'S', 'Q', 'P', 'R'] ,
   'NVN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R'] ,
   'NVM': ['E', 'D', 'A', 'A', 'G', 'G', 'K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'C', 'Q', 'H', 'P', 'P', 'R', 'R'] ,
   'NVK': ['E', 'D', 'A', 'A', 'G', 'G', 'K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'W', 'C', 'Q', 'H', 'P', 'P', 'R', 'R'] ,
   'KHR': ['E', 'E', 'A', 'A', 'V', 'V', 'S', 'S', 'L', 'L'] ,
   'NVH': ['E', 'D', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'K', 'N', 'N', 'T', 'T', 'T', 'R', 'S', 'S', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C', 'Q', 'H', 'H', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'KMG': ['E', 'A', 'S'] ,
   'TMR': ['S', 'S'] ,
   'TMS': ['Y', 'S', 'S'] ,
   'KMB': ['D', 'E', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S'] ,
   'TMV': ['Y', 'S', 'S', 'S'] ,
   'TMW': ['Y', 'S', 'S'] ,
   'KMN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'KMM': ['E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'KMK': ['E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'KMH': ['E', 'D', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S'] ,
   'KMW': ['E', 'D', 'A', 'A', 'Y', 'S', 'S'] ,
   'KMV': ['E', 'D', 'E', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'TMB': ['Y', 'Y', 'S', 'S', 'S'] ,
   'HNR': ['R', 'R', 'K', 'K', 'I', 'M', 'T', 'T', 'R', 'R', 'Q', 'Q', 'L', 'L', 'P', 'P', 'W', 'L', 'L', 'S', 'S'] ,
   'KMS': ['D', 'E', 'A', 'A', 'Y', 'S', 'S'] ,
   'KMR': ['E', 'E', 'A', 'A', 'S', 'S'] ,
   'HNW': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'HNV': ['R', 'S', 'R', 'K', 'N', 'K', 'I', 'I', 'M', 'T', 'T', 'T', 'R', 'R', 'R', 'Q', 'H', 'Q', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'TMH': ['Y', 'Y', 'S', 'S', 'S'] ,
   'TMK': ['Y', 'S', 'S'] ,
   'TMM': ['Y', 'S', 'S'] ,
   'TMN': ['Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'HWN': ['K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'KDM': ['E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'KDN': ['E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'HWM': ['K', 'N', 'I', 'I', 'Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'KDH': ['E', 'D', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'HWK': ['K', 'N', 'M', 'I', 'Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'HWH': ['K', 'N', 'N', 'I', 'I', 'I', 'Q', 'H', 'H', 'L', 'L', 'L', 'Y', 'Y', 'L', 'F', 'F'] ,
   'KDK': ['E', 'D', 'G', 'G', 'V', 'V', 'Y', 'W', 'C', 'L', 'F'] ,
   'KDD': ['E', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'HWG': ['K', 'M', 'Q', 'L', 'L'] ,
   'TVW': ['Y', 'S', 'S', 'C'] ,
   'TVV': ['Y', 'S', 'S', 'S', 'C', 'W'] ,
   'HWB': ['N', 'K', 'N', 'I', 'M', 'I', 'H', 'Q', 'H', 'L', 'L', 'L', 'Y', 'Y', 'F', 'L', 'F'] ,
   'KDA': ['E', 'G', 'V', 'L'] ,
   'KDB': ['D', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'TVR': ['S', 'S', 'W'] ,
   'TVM': ['Y', 'S', 'S', 'C'] ,
   'TVN': ['Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'TVH': ['Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'TVK': ['Y', 'S', 'S', 'W', 'C'] ,
   'HWV': ['K', 'N', 'K', 'I', 'I', 'M', 'Q', 'H', 'Q', 'L', 'L', 'L', 'Y', 'L', 'F', 'L'] ,
   'HWW': ['K', 'N', 'I', 'I', 'Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'KDV': ['E', 'D', 'E', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'KDW': ['E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'HWR': ['K', 'K', 'I', 'M', 'Q', 'Q', 'L', 'L', 'L', 'L'] ,
   'HWS': ['N', 'K', 'I', 'M', 'H', 'Q', 'L', 'L', 'Y', 'F', 'L'] ,
   'KDR': ['E', 'E', 'G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'TVB': ['Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'YRH': ['Q', 'H', 'H', 'R', 'R', 'R', 'Y', 'Y', 'C', 'C'] ,
   'NDH': ['E', 'D', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'K', 'N', 'N', 'R', 'S', 'S', 'I', 'I', 'I', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F', 'Q', 'H', 'H', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'NDK': ['E', 'D', 'G', 'G', 'V', 'V', 'K', 'N', 'R', 'S', 'M', 'I', 'Y', 'W', 'C', 'L', 'F', 'Q', 'H', 'R', 'R', 'L', 'L'] ,
   'YRK': ['Q', 'H', 'R', 'R', 'Y', 'W', 'C'] ,
   'NDM': ['E', 'D', 'G', 'G', 'V', 'V', 'K', 'N', 'R', 'S', 'I', 'I', 'Y', 'C', 'L', 'F', 'Q', 'H', 'R', 'R', 'L', 'L'] ,
   'YRM': ['Q', 'H', 'R', 'R', 'Y', 'C'] ,
   'YRN': ['Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'Y', 'Y', 'W', 'C', 'C'] ,
   'NDN': ['E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F', 'Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L'] ,
   'KRR': ['E', 'E', 'G', 'G', 'W'] ,
   'KRS': ['D', 'E', 'G', 'G', 'Y', 'C', 'W'] ,
   'YRB': ['H', 'Q', 'H', 'R', 'R', 'R', 'Y', 'Y', 'C', 'W', 'C'] ,
   'NDB': ['D', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'N', 'K', 'N', 'S', 'R', 'S', 'I', 'M', 'I', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F', 'H', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'YRD': ['Q', 'Q', 'H', 'R', 'R', 'R', 'Y', 'W', 'C'] ,
   'KRW': ['E', 'D', 'G', 'G', 'Y', 'C'] ,
   'NDG': ['E', 'G', 'V', 'K', 'R', 'M', 'W', 'L', 'Q', 'R', 'L'] ,
   'YRG': ['Q', 'R', 'W'] ,
   'KRK': ['E', 'D', 'G', 'G', 'Y', 'W', 'C'] ,
   'KRH': ['E', 'D', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'C'] ,
   'KRN': ['E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'Y', 'Y', 'W', 'C', 'C'] ,
   'KRM': ['E', 'D', 'G', 'G', 'Y', 'C'] ,
   'KRB': ['D', 'E', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'W', 'C'] ,
   'BMS': ['H', 'Q', 'P', 'P', 'D', 'E', 'A', 'A', 'Y', 'S', 'S'] ,
   'NDS': ['D', 'E', 'G', 'G', 'V', 'V', 'N', 'K', 'S', 'R', 'I', 'M', 'Y', 'C', 'W', 'F', 'L', 'H', 'Q', 'R', 'R', 'L', 'L'] ,
   'NDR': ['E', 'E', 'G', 'G', 'V', 'V', 'K', 'K', 'R', 'R', 'I', 'M', 'W', 'L', 'L', 'Q', 'Q', 'R', 'R', 'L', 'L'] ,
   'KRG': ['E', 'G', 'W'] ,
   'YRV': ['Q', 'H', 'Q', 'R', 'R', 'R', 'Y', 'C', 'W'] ,
   'YRW': ['Q', 'H', 'R', 'R', 'Y', 'C'] ,
   'TDK': ['Y', 'W', 'C', 'L', 'F'] ,
   'NMW': ['E', 'D', 'A', 'A', 'K', 'N', 'T', 'T', 'Y', 'S', 'S', 'Q', 'H', 'P', 'P'] ,
   'TDH': ['Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'NMR': ['E', 'E', 'A', 'A', 'K', 'K', 'T', 'T', 'S', 'S', 'Q', 'Q', 'P', 'P'] ,
   'TDN': ['Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'TDM': ['Y', 'C', 'L', 'F'] ,
   'TDB': ['Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'TDA': ['L'] ,
   'TDG': ['W', 'L'] ,
   'TDD': ['Y', 'W', 'C', 'L', 'L', 'F'] ,
   'NMG': ['E', 'A', 'K', 'T', 'S', 'Q', 'P'] ,
   'NMD': ['E', 'E', 'D', 'A', 'A', 'A', 'K', 'K', 'N', 'T', 'T', 'T', 'Y', 'S', 'S', 'S', 'Q', 'Q', 'H', 'P', 'P', 'P'] ,
   'NMB': ['D', 'E', 'D', 'A', 'A', 'A', 'N', 'K', 'N', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S', 'H', 'Q', 'H', 'P', 'P', 'P'] ,
   'NMA': ['E', 'A', 'K', 'T', 'S', 'Q', 'P'] ,
   'TDS': ['Y', 'C', 'W', 'F', 'L'] ,
   'TDR': ['W', 'L', 'L'] ,
   'NMM': ['E', 'D', 'A', 'A', 'K', 'N', 'T', 'T', 'Y', 'S', 'S', 'Q', 'H', 'P', 'P'] ,
   'TDW': ['Y', 'C', 'L', 'F'] ,
   'TDV': ['Y', 'C', 'W', 'L', 'F', 'L'] ,
   'NMH': ['E', 'D', 'D', 'A', 'A', 'A', 'K', 'N', 'N', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S', 'Q', 'H', 'H', 'P', 'P', 'P'] ,
   'YDR': ['Q', 'Q', 'R', 'R', 'L', 'L', 'W', 'L', 'L'] ,
   'WSA': ['T', 'R', 'S'] ,
   'WSD': ['T', 'T', 'T', 'R', 'R', 'S', 'S', 'S', 'S', 'W', 'C'] ,
   'WSH': ['T', 'T', 'T', 'R', 'S', 'S', 'S', 'S', 'S', 'C', 'C'] ,
   'WBA': ['T', 'R', 'I', 'S', 'L'] ,
   'WSM': ['T', 'T', 'R', 'S', 'S', 'S', 'C'] ,
   'WSN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'WSR': ['T', 'T', 'R', 'R', 'S', 'S', 'W'] ,
   'WSW': ['T', 'T', 'R', 'S', 'S', 'S', 'C'] ,
   'WSV': ['T', 'T', 'T', 'R', 'S', 'R', 'S', 'S', 'S', 'C', 'W'] ,
   'YDS': ['H', 'Q', 'R', 'R', 'L', 'L', 'Y', 'C', 'W', 'F', 'L'] ,
   'TSA': ['S'] ,
   'TGR': ['W'] ,
   'TGW': ['C'] ,
   'YMG': ['Q', 'P', 'S'] ,
   'WDA': ['K', 'R', 'I', 'L'] ,
   'WDB': ['N', 'K', 'N', 'S', 'R', 'S', 'I', 'M', 'I', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'WDD': ['K', 'K', 'N', 'R', 'R', 'S', 'I', 'M', 'I', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'WDG': ['K', 'R', 'M', 'W', 'L'] ,
   'WDH': ['K', 'N', 'N', 'R', 'S', 'S', 'I', 'I', 'I', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'DRS': ['N', 'K', 'S', 'R', 'D', 'E', 'G', 'G', 'Y', 'C', 'W'] ,
   'DRR': ['K', 'K', 'R', 'R', 'E', 'E', 'G', 'G', 'W'] ,
   'WDM': ['K', 'N', 'R', 'S', 'I', 'I', 'Y', 'C', 'L', 'F'] ,
   'DRW': ['K', 'N', 'R', 'S', 'E', 'D', 'G', 'G', 'Y', 'C'] ,
   'DRV': ['K', 'N', 'K', 'R', 'S', 'R', 'E', 'D', 'E', 'G', 'G', 'G', 'Y', 'C', 'W'] ,
   'DRH': ['K', 'N', 'N', 'R', 'S', 'S', 'E', 'D', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'C'] ,
   'DRK': ['K', 'N', 'R', 'S', 'E', 'D', 'G', 'G', 'Y', 'W', 'C'] ,
   'WDS': ['N', 'K', 'S', 'R', 'I', 'M', 'Y', 'C', 'W', 'F', 'L'] ,
   'DRM': ['K', 'N', 'R', 'S', 'E', 'D', 'G', 'G', 'Y', 'C'] ,
   'WDV': ['K', 'N', 'K', 'R', 'S', 'R', 'I', 'I', 'M', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'DRN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'Y', 'Y', 'W', 'C', 'C'] ,
   'DRA': ['K', 'R', 'E', 'G'] ,
   'DRB': ['N', 'K', 'N', 'S', 'R', 'S', 'D', 'E', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'W', 'C'] ,
   'DRD': ['K', 'K', 'N', 'R', 'R', 'S', 'E', 'E', 'D', 'G', 'G', 'G', 'Y', 'W', 'C'] ,
   'DRG': ['K', 'R', 'E', 'G', 'W'] ,
   'TGD': ['W', 'C'] ,
   'KVG': ['E', 'A', 'G', 'S', 'W'] ,
   'WMS': ['N', 'K', 'T', 'T', 'Y', 'S', 'S'] ,
   'WMR': ['K', 'K', 'T', 'T', 'S', 'S'] ,
   'WMW': ['K', 'N', 'T', 'T', 'Y', 'S', 'S'] ,
   'WMV': ['K', 'N', 'K', 'T', 'T', 'T', 'Y', 'S', 'S', 'S'] ,
   'WMK': ['K', 'N', 'T', 'T', 'Y', 'S', 'S'] ,
   'WMH': ['K', 'N', 'N', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S'] ,
   'WMN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'WMM': ['K', 'N', 'T', 'T', 'Y', 'S', 'S'] ,
   'WMB': ['N', 'K', 'N', 'T', 'T', 'T', 'Y', 'Y', 'S', 'S', 'S'] ,
   'WMA': ['K', 'T', 'S'] ,
   'WMG': ['K', 'T', 'S'] ,
   'WMD': ['K', 'K', 'N', 'T', 'T', 'T', 'Y', 'S', 'S', 'S'] ,
   'HNB': ['S', 'R', 'S', 'N', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'R', 'R', 'R', 'H', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'KVK': ['E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'W', 'C'] ,
   'NWV': ['E', 'D', 'E', 'V', 'V', 'V', 'K', 'N', 'K', 'I', 'I', 'M', 'Y', 'L', 'F', 'L', 'Q', 'H', 'Q', 'L', 'L', 'L'] ,
   'NWW': ['E', 'D', 'V', 'V', 'K', 'N', 'I', 'I', 'Y', 'L', 'F', 'Q', 'H', 'L', 'L'] ,
   'NWR': ['E', 'E', 'V', 'V', 'K', 'K', 'I', 'M', 'L', 'L', 'Q', 'Q', 'L', 'L'] ,
   'BVB': ['H', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'D', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'NWD': ['E', 'E', 'D', 'V', 'V', 'V', 'K', 'K', 'N', 'I', 'M', 'I', 'Y', 'L', 'L', 'F', 'Q', 'Q', 'H', 'L', 'L', 'L'] ,
   'BVW': ['Q', 'H', 'P', 'P', 'R', 'R', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'NWG': ['E', 'V', 'K', 'M', 'L', 'Q', 'L'] ,
   'NWA': ['E', 'V', 'K', 'I', 'L', 'Q', 'L'] ,
   'NWB': ['D', 'E', 'D', 'V', 'V', 'V', 'N', 'K', 'N', 'I', 'M', 'I', 'Y', 'Y', 'F', 'L', 'F', 'H', 'Q', 'H', 'L', 'L', 'L'] ,
   'NWM': ['E', 'D', 'V', 'V', 'K', 'N', 'I', 'I', 'Y', 'L', 'F', 'Q', 'H', 'L', 'L'] ,
   'NWN': ['E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'Y', 'Y', 'L', 'L', 'F', 'F', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L'] ,
   'NWH': ['E', 'D', 'D', 'V', 'V', 'V', 'K', 'N', 'N', 'I', 'I', 'I', 'Y', 'Y', 'L', 'F', 'F', 'Q', 'H', 'H', 'L', 'L', 'L'] ,
   'NWK': ['E', 'D', 'V', 'V', 'K', 'N', 'M', 'I', 'Y', 'L', 'F', 'Q', 'H', 'L', 'L'] ,
   'HND': ['R', 'R', 'S', 'K', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'R', 'R', 'R', 'Q', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'TKW': ['C', 'L', 'F'] ,
   'HNG': ['R', 'K', 'M', 'T', 'R', 'Q', 'L', 'P', 'W', 'L', 'S'] ,
   'BNR': ['R', 'R', 'Q', 'Q', 'L', 'L', 'P', 'P', 'G', 'G', 'E', 'E', 'V', 'V', 'A', 'A', 'W', 'L', 'L', 'S', 'S'] ,
   'TAS': ['Y'] ,
   'BKD': ['R', 'R', 'R', 'L', 'L', 'L', 'G', 'G', 'G', 'V', 'V', 'V', 'W', 'C', 'L', 'L', 'F'] ,
   'BKA': ['R', 'L', 'G', 'V', 'L'] ,
   'NBR': ['A', 'A', 'G', 'G', 'V', 'V', 'T', 'T', 'R', 'R', 'I', 'M', 'S', 'S', 'W', 'L', 'L', 'P', 'P', 'R', 'R', 'L', 'L'] ,
   'BKN': ['R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'NBW': ['A', 'A', 'G', 'G', 'V', 'V', 'T', 'T', 'R', 'S', 'I', 'I', 'S', 'S', 'C', 'L', 'F', 'P', 'P', 'R', 'R', 'L', 'L'] ,
   'NBV': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'T', 'T', 'T', 'R', 'S', 'R', 'I', 'I', 'M', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'BKV': ['R', 'R', 'R', 'L', 'L', 'L', 'G', 'G', 'G', 'V', 'V', 'V', 'C', 'W', 'L', 'F', 'L'] ,
   'HMH': ['K', 'N', 'N', 'T', 'T', 'T', 'Q', 'H', 'H', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S'] ,
   'NBN': ['A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L'] ,
   'NBM': ['A', 'A', 'G', 'G', 'V', 'V', 'T', 'T', 'R', 'S', 'I', 'I', 'S', 'S', 'C', 'L', 'F', 'P', 'P', 'R', 'R', 'L', 'L'] ,
   'NBA': ['A', 'G', 'V', 'T', 'R', 'I', 'S', 'L', 'P', 'R', 'L'] ,
   'HNH': ['R', 'S', 'S', 'K', 'N', 'N', 'I', 'I', 'I', 'T', 'T', 'T', 'R', 'R', 'R', 'Q', 'H', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'NBD': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'T', 'T', 'T', 'R', 'R', 'S', 'I', 'M', 'I', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'DND': ['R', 'R', 'S', 'K', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'G', 'G', 'G', 'E', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'DNG': ['R', 'K', 'M', 'T', 'G', 'E', 'V', 'A', 'W', 'L', 'S'] ,
   'DNA': ['R', 'K', 'I', 'T', 'G', 'E', 'V', 'A', 'L', 'S'] ,
   'DNB': ['S', 'R', 'S', 'N', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'G', 'G', 'G', 'D', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'DNM': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'DNN': ['R', 'R', 'S', 'S', 'K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'T', 'T', 'T', 'T', 'G', 'G', 'G', 'G', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'A', 'A', 'A', 'A', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'DNH': ['R', 'S', 'S', 'K', 'N', 'N', 'I', 'I', 'I', 'T', 'T', 'T', 'G', 'G', 'G', 'E', 'D', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'DNK': ['R', 'S', 'K', 'N', 'M', 'I', 'T', 'T', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'DNW': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'DNV': ['R', 'S', 'R', 'K', 'N', 'K', 'I', 'I', 'M', 'T', 'T', 'T', 'G', 'G', 'G', 'E', 'D', 'E', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'DNS': ['S', 'R', 'N', 'K', 'I', 'M', 'T', 'T', 'G', 'G', 'D', 'E', 'V', 'V', 'A', 'A', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'DNR': ['R', 'R', 'K', 'K', 'I', 'M', 'T', 'T', 'G', 'G', 'E', 'E', 'V', 'V', 'A', 'A', 'W', 'L', 'L', 'S', 'S'] ,
   'HNK': ['R', 'S', 'K', 'N', 'M', 'I', 'T', 'T', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'BRW': ['Q', 'H', 'R', 'R', 'E', 'D', 'G', 'G', 'Y', 'C'] ,
   'BRV': ['Q', 'H', 'Q', 'R', 'R', 'R', 'E', 'D', 'E', 'G', 'G', 'G', 'Y', 'C', 'W'] ,
   'BRS': ['H', 'Q', 'R', 'R', 'D', 'E', 'G', 'G', 'Y', 'C', 'W'] ,
   'BRR': ['Q', 'Q', 'R', 'R', 'E', 'E', 'G', 'G', 'W'] ,
   'BRN': ['Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'Y', 'Y', 'W', 'C', 'C'] ,
   'BRM': ['Q', 'H', 'R', 'R', 'E', 'D', 'G', 'G', 'Y', 'C'] ,
   'BRK': ['Q', 'H', 'R', 'R', 'E', 'D', 'G', 'G', 'Y', 'W', 'C'] ,
   'BRH': ['Q', 'H', 'H', 'R', 'R', 'R', 'E', 'D', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'C'] ,
   'BRG': ['Q', 'R', 'E', 'G', 'W'] ,
   'BRD': ['Q', 'Q', 'H', 'R', 'R', 'R', 'E', 'E', 'D', 'G', 'G', 'G', 'Y', 'W', 'C'] ,
   'BRB': ['H', 'Q', 'H', 'R', 'R', 'R', 'D', 'E', 'D', 'G', 'G', 'G', 'Y', 'Y', 'C', 'W', 'C'] ,
   'BRA': ['Q', 'R', 'E', 'G'] ,
   'TWB': ['Y', 'Y', 'F', 'L', 'F'] ,
   'YNM': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'YNN': ['R', 'R', 'R', 'R', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'P', 'P', 'P', 'P', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'TWA': ['L'] ,
   'YNH': ['R', 'R', 'R', 'Q', 'H', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'TWG': ['L'] ,
   'TWD': ['Y', 'L', 'L', 'F'] ,
   'YNK': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'YND': ['R', 'R', 'R', 'Q', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'TWK': ['Y', 'L', 'F'] ,
   'TWH': ['Y', 'Y', 'L', 'F', 'F'] ,
   'YNG': ['R', 'Q', 'L', 'P', 'W', 'L', 'S'] ,
   'TWN': ['Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'YNA': ['R', 'Q', 'L', 'P', 'L', 'S'] ,
   'YNB': ['R', 'R', 'R', 'H', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'TWM': ['Y', 'L', 'F'] ,
   'TWR': ['L', 'L'] ,
   'TWS': ['Y', 'F', 'L'] ,
   'TWV': ['Y', 'L', 'F', 'L'] ,
   'TWW': ['Y', 'L', 'F'] ,
   'YNV': ['R', 'R', 'R', 'Q', 'H', 'Q', 'L', 'L', 'L', 'P', 'P', 'P', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'YNW': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'YNR': ['R', 'R', 'Q', 'Q', 'L', 'L', 'P', 'P', 'W', 'L', 'L', 'S', 'S'] ,
   'YNS': ['R', 'R', 'H', 'Q', 'L', 'L', 'P', 'P', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'TNW': ['C', 'Y', 'L', 'F', 'S', 'S'] ,
   'TNV': ['C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'TNS': ['C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'TNR': ['W', 'L', 'L', 'S', 'S'] ,
   'TND': ['W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'TNG': ['W', 'L', 'S'] ,
   'TNA': ['L', 'S'] ,
   'TNB': ['C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'TNM': ['C', 'Y', 'L', 'F', 'S', 'S'] ,
   'TNN': ['W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'TNH': ['C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'TNK': ['W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'HHS': ['N', 'K', 'T', 'T', 'I', 'M', 'H', 'Q', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'F', 'L'] ,
   'HHR': ['K', 'K', 'T', 'T', 'I', 'M', 'Q', 'Q', 'P', 'P', 'L', 'L', 'S', 'S', 'L', 'L'] ,
   'YGD': ['R', 'R', 'R', 'W', 'C'] ,
   'NKD': ['G', 'G', 'G', 'V', 'V', 'V', 'R', 'R', 'S', 'I', 'M', 'I', 'W', 'C', 'L', 'L', 'F', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'HHV': ['K', 'N', 'K', 'T', 'T', 'T', 'I', 'I', 'M', 'Q', 'H', 'Q', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'KGW': ['G', 'G', 'C'] ,
   'KGV': ['G', 'G', 'G', 'C', 'W'] ,
   'NKH': ['G', 'G', 'G', 'V', 'V', 'V', 'R', 'S', 'S', 'I', 'I', 'I', 'C', 'C', 'L', 'F', 'F', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'YGN': ['R', 'R', 'R', 'R', 'W', 'C', 'C'] ,
   'YGM': ['R', 'R', 'C'] ,
   'NWS': ['D', 'E', 'V', 'V', 'N', 'K', 'I', 'M', 'Y', 'F', 'L', 'H', 'Q', 'L', 'L'] ,
   'NKM': ['G', 'G', 'V', 'V', 'R', 'S', 'I', 'I', 'C', 'L', 'F', 'R', 'R', 'L', 'L'] ,
   'NKN': ['G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'W', 'C', 'C', 'L', 'L', 'F', 'F', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L'] ,
   'YGH': ['R', 'R', 'R', 'C', 'C'] ,
   'YGW': ['R', 'R', 'C'] ,
   'YGV': ['R', 'R', 'R', 'C', 'W'] ,
   'NKR': ['G', 'G', 'V', 'V', 'R', 'R', 'I', 'M', 'W', 'L', 'L', 'R', 'R', 'L', 'L'] ,
   'HHG': ['K', 'T', 'M', 'Q', 'P', 'L', 'S', 'L'] ,
   'YGR': ['R', 'R', 'W'] ,
   'NKV': ['G', 'G', 'G', 'V', 'V', 'V', 'R', 'S', 'R', 'I', 'I', 'M', 'C', 'W', 'L', 'F', 'L', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'NKW': ['G', 'G', 'V', 'V', 'R', 'S', 'I', 'I', 'C', 'L', 'F', 'R', 'R', 'L', 'L'] ,
   'HHK': ['K', 'N', 'T', 'T', 'M', 'I', 'Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'KGH': ['G', 'G', 'G', 'C', 'C'] ,
   'HHH': ['K', 'N', 'N', 'T', 'T', 'T', 'I', 'I', 'I', 'Q', 'H', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'KGM': ['G', 'G', 'C'] ,
   'HHN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'M', 'I', 'I', 'I', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'L', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'HHM': ['K', 'N', 'T', 'T', 'I', 'I', 'Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'KGN': ['G', 'G', 'G', 'G', 'W', 'C', 'C'] ,
   'WRG': ['K', 'R', 'W'] ,
   'WRD': ['K', 'K', 'N', 'R', 'R', 'S', 'Y', 'W', 'C'] ,
   'WRB': ['N', 'K', 'N', 'S', 'R', 'S', 'Y', 'Y', 'C', 'W', 'C'] ,
   'WRA': ['K', 'R'] ,
   'WRN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'Y', 'Y', 'W', 'C', 'C'] ,
   'WRM': ['K', 'N', 'R', 'S', 'Y', 'C'] ,
   'WRK': ['K', 'N', 'R', 'S', 'Y', 'W', 'C'] ,
   'WRH': ['K', 'N', 'N', 'R', 'S', 'S', 'Y', 'Y', 'C', 'C'] ,
   'WRV': ['K', 'N', 'K', 'R', 'S', 'R', 'Y', 'C', 'W'] ,
   'WRW': ['K', 'N', 'R', 'S', 'Y', 'C'] ,
   'WRR': ['K', 'K', 'R', 'R', 'W'] ,
   'WRS': ['N', 'K', 'S', 'R', 'Y', 'C', 'W'] ,
   'BDD': ['Q', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'E', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'BDG': ['Q', 'R', 'L', 'E', 'G', 'V', 'W', 'L'] ,
   'BVG': ['Q', 'P', 'R', 'E', 'A', 'G', 'S', 'W'] ,
   'BDA': ['Q', 'R', 'L', 'E', 'G', 'V', 'L'] ,
   'BDB': ['H', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'D', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'W', 'C', 'F', 'L', 'F'] ,
   'TRA': [] ,
   'WGD': ['R', 'R', 'S', 'W', 'C'] ,
   'BDN': ['Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'V', 'V', 'V', 'V', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'WGA': ['R'] ,
   'DSV': ['T', 'T', 'T', 'R', 'S', 'R', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'W'] ,
   'DSW': ['T', 'T', 'R', 'S', 'A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'WGN': ['R', 'R', 'S', 'S', 'W', 'C', 'C'] ,
   'DSR': ['T', 'T', 'R', 'R', 'A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'WGH': ['R', 'S', 'S', 'C', 'C'] ,
   'BDH': ['Q', 'H', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'E', 'D', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'DSN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'WGW': ['R', 'S', 'C'] ,
   'DSM': ['T', 'T', 'R', 'S', 'A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'TRG': ['W'] ,
   'DSH': ['T', 'T', 'T', 'R', 'S', 'S', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'C'] ,
   'WGR': ['R', 'R', 'W'] ,
   'DSD': ['T', 'T', 'T', 'R', 'R', 'S', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'W', 'C'] ,
   'DSA': ['T', 'R', 'A', 'G', 'S'] ,
   'BAW': ['Q', 'H', 'E', 'D', 'Y'] ,
   'BSV': ['P', 'P', 'P', 'R', 'R', 'R', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'W'] ,
   'BSW': ['P', 'P', 'R', 'R', 'A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'BSR': ['P', 'P', 'R', 'R', 'A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'BSM': ['P', 'P', 'R', 'R', 'A', 'A', 'G', 'G', 'S', 'S', 'C'] ,
   'BSN': ['P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'BSH': ['P', 'P', 'P', 'R', 'R', 'R', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'C'] ,
   'BSD': ['P', 'P', 'P', 'R', 'R', 'R', 'A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'W', 'C'] ,
   'BSA': ['P', 'R', 'A', 'G', 'S'] ,
   'BAV': ['Q', 'H', 'Q', 'E', 'D', 'E', 'Y'] ,
   'HAH': ['K', 'N', 'N', 'Q', 'H', 'H', 'Y', 'Y'] ,
   'BAR': ['Q', 'Q', 'E', 'E'] ,
   'BAS': ['H', 'Q', 'D', 'E', 'Y'] ,
   'BAG': ['Q', 'E'] ,
   'BAD': ['Q', 'Q', 'H', 'E', 'E', 'D', 'Y'] ,
   'HAK': ['K', 'N', 'Q', 'H', 'Y'] ,
   'BAB': ['H', 'Q', 'H', 'D', 'E', 'D', 'Y', 'Y'] ,
   'BAA': ['Q', 'E'] ,
   'BAN': ['Q', 'Q', 'H', 'H', 'E', 'E', 'D', 'D', 'Y', 'Y'] ,
   'BAM': ['Q', 'H', 'E', 'D', 'Y'] ,
   'BAK': ['Q', 'H', 'E', 'D', 'Y'] ,
   'BAH': ['Q', 'H', 'H', 'E', 'D', 'D', 'Y', 'Y'] ,
   'HAM': ['K', 'N', 'Q', 'H', 'Y'] ,
   'NHD': ['E', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'K', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'Y', 'S', 'S', 'S', 'L', 'L', 'F', 'Q', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L'] ,
   'NHG': ['E', 'A', 'V', 'K', 'T', 'M', 'S', 'L', 'Q', 'P', 'L'] ,
   'NHA': ['E', 'A', 'V', 'K', 'T', 'I', 'S', 'L', 'Q', 'P', 'L'] ,
   'HAN': ['K', 'K', 'N', 'N', 'Q', 'Q', 'H', 'H', 'Y', 'Y'] ,
   'NHB': ['D', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'N', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F', 'H', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L'] ,
   'NHM': ['E', 'D', 'A', 'A', 'V', 'V', 'K', 'N', 'T', 'T', 'I', 'I', 'Y', 'S', 'S', 'L', 'F', 'Q', 'H', 'P', 'P', 'L', 'L'] ,
   'NHN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'V', 'V', 'V', 'V', 'K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'M', 'I', 'I', 'I', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F', 'Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'L', 'L', 'L', 'L'] ,
   'NHH': ['E', 'D', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'K', 'N', 'N', 'T', 'T', 'T', 'I', 'I', 'I', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F', 'Q', 'H', 'H', 'P', 'P', 'P', 'L', 'L', 'L'] ,
   'NHK': ['E', 'D', 'A', 'A', 'V', 'V', 'K', 'N', 'T', 'T', 'M', 'I', 'Y', 'S', 'S', 'L', 'F', 'Q', 'H', 'P', 'P', 'L', 'L'] ,
   'BNS': ['R', 'R', 'H', 'Q', 'L', 'L', 'P', 'P', 'G', 'G', 'D', 'E', 'V', 'V', 'A', 'A', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'NHW': ['E', 'D', 'A', 'A', 'V', 'V', 'K', 'N', 'T', 'T', 'I', 'I', 'Y', 'S', 'S', 'L', 'F', 'Q', 'H', 'P', 'P', 'L', 'L'] ,
   'NHV': ['E', 'D', 'E', 'A', 'A', 'A', 'V', 'V', 'V', 'K', 'N', 'K', 'T', 'T', 'T', 'I', 'I', 'M', 'Y', 'S', 'S', 'S', 'L', 'F', 'L', 'Q', 'H', 'Q', 'P', 'P', 'P', 'L', 'L', 'L'] ,
   'NHS': ['D', 'E', 'A', 'A', 'V', 'V', 'N', 'K', 'T', 'T', 'I', 'M', 'Y', 'S', 'S', 'F', 'L', 'H', 'Q', 'P', 'P', 'L', 'L'] ,
   'NHR': ['E', 'E', 'A', 'A', 'V', 'V', 'K', 'K', 'T', 'T', 'I', 'M', 'S', 'S', 'L', 'L', 'Q', 'Q', 'P', 'P', 'L', 'L'] ,
   'HAB': ['N', 'K', 'N', 'H', 'Q', 'H', 'Y', 'Y'] ,
   'HGV': ['R', 'S', 'R', 'R', 'R', 'R', 'C', 'W'] ,
   'KNB': ['G', 'G', 'G', 'D', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'HGR': ['R', 'R', 'R', 'R', 'W'] ,
   'BNV': ['R', 'R', 'R', 'Q', 'H', 'Q', 'L', 'L', 'L', 'P', 'P', 'P', 'G', 'G', 'G', 'E', 'D', 'E', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'HGN': ['R', 'R', 'S', 'S', 'R', 'R', 'R', 'R', 'W', 'C', 'C'] ,
   'HGM': ['R', 'S', 'R', 'R', 'C'] ,
   'HGH': ['R', 'S', 'S', 'R', 'R', 'R', 'C', 'C'] ,
   'HGD': ['R', 'R', 'S', 'R', 'R', 'R', 'W', 'C'] ,
   'HAG': ['K', 'Q'] ,
   'HGA': ['R', 'R'] ,
   'BHH': ['Q', 'H', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'E', 'D', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'BHK': ['Q', 'H', 'P', 'P', 'L', 'L', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'BHM': ['Q', 'H', 'P', 'P', 'L', 'L', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'BHN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'L', 'L', 'L', 'L', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'V', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'BHA': ['Q', 'P', 'L', 'E', 'A', 'V', 'S', 'L'] ,
   'BHB': ['H', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'D', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'BHD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'E', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'BHG': ['Q', 'P', 'L', 'E', 'A', 'V', 'S', 'L'] ,
   'BHS': ['H', 'Q', 'P', 'P', 'L', 'L', 'D', 'E', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'F', 'L'] ,
   'BHR': ['Q', 'Q', 'P', 'P', 'L', 'L', 'E', 'E', 'A', 'A', 'V', 'V', 'S', 'S', 'L', 'L'] ,
   'BHW': ['Q', 'H', 'P', 'P', 'L', 'L', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'BHV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'L', 'L', 'L', 'E', 'D', 'E', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'THG': ['S', 'L'] ,
   'KNW': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'BNA': ['R', 'Q', 'L', 'P', 'G', 'E', 'V', 'A', 'L', 'S'] ,
   'HAS': ['N', 'K', 'H', 'Q', 'Y'] ,
   'BNG': ['R', 'Q', 'L', 'P', 'G', 'E', 'V', 'A', 'W', 'L', 'S'] ,
   'KNS': ['G', 'G', 'D', 'E', 'V', 'V', 'A', 'A', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'THA': ['S', 'L'] ,
   'HAW': ['K', 'N', 'Q', 'H', 'Y'] ,
   'YMS': ['H', 'Q', 'P', 'P', 'Y', 'S', 'S'] ,
   'YMR': ['Q', 'Q', 'P', 'P', 'S', 'S'] ,
   'YMW': ['Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'YMV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'Y', 'S', 'S', 'S'] ,
   'HRW': ['K', 'N', 'R', 'S', 'Q', 'H', 'R', 'R', 'Y', 'C'] ,
   'HRV': ['K', 'N', 'K', 'R', 'S', 'R', 'Q', 'H', 'Q', 'R', 'R', 'R', 'Y', 'C', 'W'] ,
   'HRS': ['N', 'K', 'S', 'R', 'H', 'Q', 'R', 'R', 'Y', 'C', 'W'] ,
   'HRR': ['K', 'K', 'R', 'R', 'Q', 'Q', 'R', 'R', 'W'] ,
   'HRM': ['K', 'N', 'R', 'S', 'Q', 'H', 'R', 'R', 'Y', 'C'] ,
   'YMB': ['H', 'Q', 'H', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S'] ,
   'YMD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'Y', 'S', 'S', 'S'] ,
   'HRK': ['K', 'N', 'R', 'S', 'Q', 'H', 'R', 'R', 'Y', 'W', 'C'] ,
   'YMH': ['Q', 'H', 'H', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S'] ,
   'YMK': ['Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'YMM': ['Q', 'H', 'P', 'P', 'Y', 'S', 'S'] ,
   'YMN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'Y', 'Y', 'S', 'S', 'S', 'S'] ,
   'KAB': ['D', 'E', 'D', 'Y', 'Y'] ,
   'KAA': ['E'] ,
   'KAG': ['E'] ,
   'KAD': ['E', 'E', 'D', 'Y'] ,
   'KAK': ['E', 'D', 'Y'] ,
   'KAH': ['E', 'D', 'D', 'Y', 'Y'] ,
   'KAN': ['E', 'E', 'D', 'D', 'Y', 'Y'] ,
   'KAM': ['E', 'D', 'Y'] ,
   'KAS': ['D', 'E', 'Y'] ,
   'KAR': ['E', 'E'] ,
   'KAW': ['E', 'D', 'Y'] ,
   'KAV': ['E', 'D', 'E', 'Y'] ,
   'KRA': ['E', 'G'] ,
   'HGW': ['R', 'S', 'R', 'R', 'C'] ,
   'BKM': ['R', 'R', 'L', 'L', 'G', 'G', 'V', 'V', 'C', 'L', 'F'] ,
   'BKH': ['R', 'R', 'R', 'L', 'L', 'L', 'G', 'G', 'G', 'V', 'V', 'V', 'C', 'C', 'L', 'F', 'F'] ,
   'DGA': ['R', 'G'] ,
   'DGD': ['R', 'R', 'S', 'G', 'G', 'G', 'W', 'C'] ,
   'DGH': ['R', 'S', 'S', 'G', 'G', 'G', 'C', 'C'] ,
   'DGN': ['R', 'R', 'S', 'S', 'G', 'G', 'G', 'G', 'W', 'C', 'C'] ,
   'DGM': ['R', 'S', 'G', 'G', 'C'] ,
   'DGR': ['R', 'R', 'G', 'G', 'W'] ,
   'NBH': ['A', 'A', 'A', 'G', 'G', 'G', 'V', 'V', 'V', 'T', 'T', 'T', 'R', 'S', 'S', 'I', 'I', 'I', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'DGV': ['R', 'S', 'R', 'G', 'G', 'G', 'C', 'W'] ,
   'DGW': ['R', 'S', 'G', 'G', 'C'] ,
   'HKW': ['R', 'S', 'I', 'I', 'R', 'R', 'L', 'L', 'C', 'L', 'F'] ,
   'BKR': ['R', 'R', 'L', 'L', 'G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'YWW': ['Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'YWV': ['Q', 'H', 'Q', 'L', 'L', 'L', 'Y', 'L', 'F', 'L'] ,
   'YWS': ['H', 'Q', 'L', 'L', 'Y', 'F', 'L'] ,
   'YWR': ['Q', 'Q', 'L', 'L', 'L', 'L'] ,
   'YWG': ['Q', 'L', 'L'] ,
   'YWD': ['Q', 'Q', 'H', 'L', 'L', 'L', 'Y', 'L', 'L', 'F'] ,
   'YWB': ['H', 'Q', 'H', 'L', 'L', 'L', 'Y', 'Y', 'F', 'L', 'F'] ,
   'YWA': ['Q', 'L', 'L'] ,
   'YWN': ['Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'YWM': ['Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'YWK': ['Q', 'H', 'L', 'L', 'Y', 'L', 'F'] ,
   'YWH': ['Q', 'H', 'H', 'L', 'L', 'L', 'Y', 'Y', 'L', 'F', 'F'] ,
   'KWA': ['E', 'V', 'L'] ,
   'KWB': ['D', 'E', 'D', 'V', 'V', 'V', 'Y', 'Y', 'F', 'L', 'F'] ,
   'TGV': ['C', 'W'] ,
   'KWD': ['E', 'E', 'D', 'V', 'V', 'V', 'Y', 'L', 'L', 'F'] ,
   'KWG': ['E', 'V', 'L'] ,
   'KWH': ['E', 'D', 'D', 'V', 'V', 'V', 'Y', 'Y', 'L', 'F', 'F'] ,
   'KWK': ['E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'KWM': ['E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'KWN': ['E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'KWS': ['D', 'E', 'V', 'V', 'Y', 'F', 'L'] ,
   'KWR': ['E', 'E', 'V', 'V', 'L', 'L'] ,
   'KWW': ['E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'KWV': ['E', 'D', 'E', 'V', 'V', 'V', 'Y', 'L', 'F', 'L'] ,
   'TGH': ['C', 'C'] ,
   'TGN': ['W', 'C', 'C'] ,
   'TGM': ['C'] ,
   'DHN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'M', 'I', 'I', 'I', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'V', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'DHM': ['K', 'N', 'T', 'T', 'I', 'I', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'DHK': ['K', 'N', 'T', 'T', 'M', 'I', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'DHH': ['K', 'N', 'N', 'T', 'T', 'T', 'I', 'I', 'I', 'E', 'D', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'DHG': ['K', 'T', 'M', 'E', 'A', 'V', 'S', 'L'] ,
   'DHD': ['K', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'E', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'DHB': ['N', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'D', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'DHA': ['K', 'T', 'I', 'E', 'A', 'V', 'S', 'L'] ,
   'DHW': ['K', 'N', 'T', 'T', 'I', 'I', 'E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'DHV': ['K', 'N', 'K', 'T', 'T', 'T', 'I', 'I', 'M', 'E', 'D', 'E', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'HRA': ['K', 'R', 'Q', 'R'] ,
   'DHS': ['N', 'K', 'T', 'T', 'I', 'M', 'D', 'E', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'F', 'L'] ,
   'DHR': ['K', 'K', 'T', 'T', 'I', 'M', 'E', 'E', 'A', 'A', 'V', 'V', 'S', 'S', 'L', 'L'] ,
   'NRK': ['E', 'D', 'G', 'G', 'K', 'N', 'R', 'S', 'Y', 'W', 'C', 'Q', 'H', 'R', 'R'] ,
   'KMA': ['E', 'A', 'S'] ,
   'NRH': ['E', 'D', 'D', 'G', 'G', 'G', 'K', 'N', 'N', 'R', 'S', 'S', 'Y', 'Y', 'C', 'C', 'Q', 'H', 'H', 'R', 'R', 'R'] ,
   'NRN': ['E', 'E', 'D', 'D', 'G', 'G', 'G', 'G', 'K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'Y', 'Y', 'W', 'C', 'C', 'Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R'] ,
   'NRM': ['E', 'D', 'G', 'G', 'K', 'N', 'R', 'S', 'Y', 'C', 'Q', 'H', 'R', 'R'] ,
   'NRB': ['D', 'E', 'D', 'G', 'G', 'G', 'N', 'K', 'N', 'S', 'R', 'S', 'Y', 'Y', 'C', 'W', 'C', 'H', 'Q', 'H', 'R', 'R', 'R'] ,
   'NRA': ['E', 'G', 'K', 'R', 'Q', 'R'] ,
   'NRG': ['E', 'G', 'K', 'R', 'W', 'Q', 'R'] ,
   'NRD': ['E', 'E', 'D', 'G', 'G', 'G', 'K', 'K', 'N', 'R', 'R', 'S', 'Y', 'W', 'C', 'Q', 'Q', 'H', 'R', 'R', 'R'] ,
   'NRS': ['D', 'E', 'G', 'G', 'N', 'K', 'S', 'R', 'Y', 'C', 'W', 'H', 'Q', 'R', 'R'] ,
   'NRR': ['E', 'E', 'G', 'G', 'K', 'K', 'R', 'R', 'W', 'Q', 'Q', 'R', 'R'] ,
   'NRW': ['E', 'D', 'G', 'G', 'K', 'N', 'R', 'S', 'Y', 'C', 'Q', 'H', 'R', 'R'] ,
   'NRV': ['E', 'D', 'E', 'G', 'G', 'G', 'K', 'N', 'K', 'R', 'S', 'R', 'Y', 'C', 'W', 'Q', 'H', 'Q', 'R', 'R', 'R'] ,
   'BGA': ['R', 'G'] ,
   'BGD': ['R', 'R', 'R', 'G', 'G', 'G', 'W', 'C'] ,
   'BGH': ['R', 'R', 'R', 'G', 'G', 'G', 'C', 'C'] ,
   'BGM': ['R', 'R', 'G', 'G', 'C'] ,
   'BGN': ['R', 'R', 'R', 'R', 'G', 'G', 'G', 'G', 'W', 'C', 'C'] ,
   'BGR': ['R', 'R', 'G', 'G', 'W'] ,
   'BGV': ['R', 'R', 'R', 'G', 'G', 'G', 'C', 'W'] ,
   'BGW': ['R', 'R', 'G', 'G', 'C'] ,
   'HSA': ['T', 'R', 'P', 'R', 'S'] ,
   'HSD': ['T', 'T', 'T', 'R', 'R', 'S', 'P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'W', 'C'] ,
   'HSH': ['T', 'T', 'T', 'R', 'S', 'S', 'P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'C', 'C'] ,
   'HSN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'HSM': ['T', 'T', 'R', 'S', 'P', 'P', 'R', 'R', 'S', 'S', 'C'] ,
   'HSR': ['T', 'T', 'R', 'R', 'P', 'P', 'R', 'R', 'S', 'S', 'W'] ,
   'HSV': ['T', 'T', 'T', 'R', 'S', 'R', 'P', 'P', 'P', 'R', 'R', 'R', 'S', 'S', 'S', 'C', 'W'] ,
   'HSW': ['T', 'T', 'R', 'S', 'P', 'P', 'R', 'R', 'S', 'S', 'C'] ,
   'KNN': ['G', 'G', 'G', 'G', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'A', 'A', 'A', 'A', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'KNM': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'KNK': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'KNH': ['G', 'G', 'G', 'E', 'D', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'THW': ['Y', 'S', 'S', 'L', 'F'] ,
   'THV': ['Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'KND': ['G', 'G', 'G', 'E', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'BNW': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'THR': ['S', 'S', 'L', 'L'] ,
   'KNA': ['G', 'E', 'V', 'A', 'L', 'S'] ,
   'BNK': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'THN': ['Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'THM': ['Y', 'S', 'S', 'L', 'F'] ,
   'BNH': ['R', 'R', 'R', 'Q', 'H', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'G', 'G', 'G', 'E', 'D', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'THK': ['Y', 'S', 'S', 'L', 'F'] ,
   'BNN': ['R', 'R', 'R', 'R', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'P', 'P', 'P', 'P', 'G', 'G', 'G', 'G', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'A', 'A', 'A', 'A', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'BNM': ['R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'THH': ['Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'KNV': ['G', 'G', 'G', 'E', 'D', 'E', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'BNB': ['R', 'R', 'R', 'H', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'G', 'G', 'G', 'D', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'HAR': ['K', 'K', 'Q', 'Q'] ,
   'THD': ['Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'KNR': ['G', 'G', 'E', 'E', 'V', 'V', 'A', 'A', 'W', 'L', 'L', 'S', 'S'] ,
   'THB': ['Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'HAV': ['K', 'N', 'K', 'Q', 'H', 'Q', 'Y'] ,
   'BND': ['R', 'R', 'R', 'Q', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P', 'G', 'G', 'G', 'E', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'WNB': ['S', 'R', 'S', 'N', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S'] ,
   'WNA': ['R', 'K', 'I', 'T', 'L', 'S'] ,
   'WNG': ['R', 'K', 'M', 'T', 'W', 'L', 'S'] ,
   'WND': ['R', 'R', 'S', 'K', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S'] ,
   'WNK': ['R', 'S', 'K', 'N', 'M', 'I', 'T', 'T', 'W', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'WNH': ['R', 'S', 'S', 'K', 'N', 'N', 'I', 'I', 'I', 'T', 'T', 'T', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S'] ,
   'WNN': ['R', 'R', 'S', 'S', 'K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'T', 'T', 'T', 'T', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'WNM': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'WNR': ['R', 'R', 'K', 'K', 'I', 'M', 'T', 'T', 'W', 'L', 'L', 'S', 'S'] ,
   'WNS': ['S', 'R', 'N', 'K', 'I', 'M', 'T', 'T', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'WNV': ['R', 'S', 'R', 'K', 'N', 'K', 'I', 'I', 'M', 'T', 'T', 'T', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S'] ,
   'WNW': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'YKA': ['R', 'L', 'L'] ,
   'YKD': ['R', 'R', 'R', 'L', 'L', 'L', 'W', 'C', 'L', 'L', 'F'] ,
   'YKH': ['R', 'R', 'R', 'L', 'L', 'L', 'C', 'C', 'L', 'F', 'F'] ,
   'YKN': ['R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'YKM': ['R', 'R', 'L', 'L', 'C', 'L', 'F'] ,
   'YKR': ['R', 'R', 'L', 'L', 'W', 'L', 'L'] ,
   'YKW': ['R', 'R', 'L', 'L', 'C', 'L', 'F'] ,
   'YKV': ['R', 'R', 'R', 'L', 'L', 'L', 'C', 'W', 'L', 'F', 'L'] ,
   'NMK': ['E', 'D', 'A', 'A', 'K', 'N', 'T', 'T', 'Y', 'S', 'S', 'Q', 'H', 'P', 'P'] ,
   'HKA': ['R', 'I', 'R', 'L', 'L'] ,
   'WWW': ['K', 'N', 'I', 'I', 'Y', 'L', 'F'] ,
   'WWV': ['K', 'N', 'K', 'I', 'I', 'M', 'Y', 'L', 'F', 'L'] ,
   'WWS': ['N', 'K', 'I', 'M', 'Y', 'F', 'L'] ,
   'WWR': ['K', 'K', 'I', 'M', 'L', 'L'] ,
   'WWD': ['K', 'K', 'N', 'I', 'M', 'I', 'Y', 'L', 'L', 'F'] ,
   'WWG': ['K', 'M', 'L'] ,
   'WWA': ['K', 'I', 'L'] ,
   'WWB': ['N', 'K', 'N', 'I', 'M', 'I', 'Y', 'Y', 'F', 'L', 'F'] ,
   'WWM': ['K', 'N', 'I', 'I', 'Y', 'L', 'F'] ,
   'WWN': ['K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'WWH': ['K', 'N', 'N', 'I', 'I', 'I', 'Y', 'Y', 'L', 'F', 'F'] ,
   'WWK': ['K', 'N', 'M', 'I', 'Y', 'L', 'F'] ,
   'DVM': ['K', 'N', 'T', 'T', 'R', 'S', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'DVN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'DVH': ['K', 'N', 'N', 'T', 'T', 'T', 'R', 'S', 'S', 'E', 'D', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'DVK': ['K', 'N', 'T', 'T', 'R', 'S', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'W', 'C'] ,
   'DVD': ['K', 'K', 'N', 'T', 'T', 'T', 'R', 'R', 'S', 'E', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'DVG': ['K', 'T', 'R', 'E', 'A', 'G', 'S', 'W'] ,
   'DVA': ['K', 'T', 'R', 'E', 'A', 'G', 'S'] ,
   'DVB': ['N', 'K', 'N', 'T', 'T', 'T', 'S', 'R', 'S', 'D', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'DVW': ['K', 'N', 'T', 'T', 'R', 'S', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'DVV': ['K', 'N', 'K', 'T', 'T', 'T', 'R', 'S', 'R', 'E', 'D', 'E', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'DVS': ['N', 'K', 'T', 'T', 'S', 'R', 'D', 'E', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C', 'W'] ,
   'DVR': ['K', 'K', 'T', 'T', 'R', 'R', 'E', 'E', 'A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'WAN': ['K', 'K', 'N', 'N', 'Y', 'Y'] ,
   'WAM': ['K', 'N', 'Y'] ,
   'WAK': ['K', 'N', 'Y'] ,
   'WAH': ['K', 'N', 'N', 'Y', 'Y'] ,
   'WAG': ['K'] ,
   'WAD': ['K', 'K', 'N', 'Y'] ,
   'WAB': ['N', 'K', 'N', 'Y', 'Y'] ,
   'WAA': ['K'] ,
   'THS': ['Y', 'S', 'S', 'F', 'L'] ,
   'WAW': ['K', 'N', 'Y'] ,
   'WAV': ['K', 'N', 'K', 'Y'] ,
   'WAS': ['N', 'K', 'Y'] ,
   'WAR': ['K', 'K'] ,
   'NSH': ['A', 'A', 'A', 'G', 'G', 'G', 'T', 'T', 'T', 'R', 'S', 'S', 'S', 'S', 'S', 'C', 'C', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NSM': ['A', 'A', 'G', 'G', 'T', 'T', 'R', 'S', 'S', 'S', 'C', 'P', 'P', 'R', 'R'] ,
   'NSN': ['A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R'] ,
   'NSA': ['A', 'G', 'T', 'R', 'S', 'P', 'R'] ,
   'NSD': ['A', 'A', 'A', 'G', 'G', 'G', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'S', 'S', 'W', 'C', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NVD': ['E', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'K', 'K', 'N', 'T', 'T', 'T', 'R', 'R', 'S', 'Y', 'S', 'S', 'S', 'W', 'C', 'Q', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NSR': ['A', 'A', 'G', 'G', 'T', 'T', 'R', 'R', 'S', 'S', 'W', 'P', 'P', 'R', 'R'] ,
   'NSV': ['A', 'A', 'A', 'G', 'G', 'G', 'T', 'T', 'T', 'R', 'S', 'R', 'S', 'S', 'S', 'C', 'W', 'P', 'P', 'P', 'R', 'R', 'R'] ,
   'NSW': ['A', 'A', 'G', 'G', 'T', 'T', 'R', 'S', 'S', 'S', 'C', 'P', 'P', 'R', 'R'] ,
   'YMA': ['Q', 'P', 'S'] ,
   'HRN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'Y', 'Y', 'W', 'C', 'C'] ,
   'DAM': ['K', 'N', 'E', 'D', 'Y'] ,
   'HRH': ['K', 'N', 'N', 'R', 'S', 'S', 'Q', 'H', 'H', 'R', 'R', 'R', 'Y', 'Y', 'C', 'C'] ,
   'HBM': ['T', 'T', 'R', 'S', 'I', 'I', 'P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'C', 'L', 'F'] ,
   'HNA': ['R', 'K', 'I', 'T', 'R', 'Q', 'L', 'P', 'L', 'S'] ,
   'HBN': ['T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'S', 'S', 'S', 'S', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'HBH': ['T', 'T', 'T', 'R', 'S', 'S', 'I', 'I', 'I', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'C', 'C', 'L', 'F', 'F'] ,
   'NAD': ['E', 'E', 'D', 'K', 'K', 'N', 'Y', 'Q', 'Q', 'H'] ,
   'HBD': ['T', 'T', 'T', 'R', 'R', 'S', 'I', 'M', 'I', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'W', 'C', 'L', 'L', 'F'] ,
   'NAH': ['E', 'D', 'D', 'K', 'N', 'N', 'Y', 'Y', 'Q', 'H', 'H'] ,
   'NAN': ['E', 'E', 'D', 'D', 'K', 'K', 'N', 'N', 'Y', 'Y', 'Q', 'Q', 'H', 'H'] ,
   'NAM': ['E', 'D', 'K', 'N', 'Y', 'Q', 'H'] ,
   'NAR': ['E', 'E', 'K', 'K', 'Q', 'Q'] ,
   'NAS': ['D', 'E', 'N', 'K', 'Y', 'H', 'Q'] ,
   'KMD': ['E', 'E', 'D', 'A', 'A', 'A', 'Y', 'S', 'S', 'S'] ,
   'NAV': ['E', 'D', 'E', 'K', 'N', 'K', 'Y', 'Q', 'H', 'Q'] ,
   'NAW': ['E', 'D', 'K', 'N', 'Y', 'Q', 'H'] ,
   'HRD': ['K', 'K', 'N', 'R', 'R', 'S', 'Q', 'Q', 'H', 'R', 'R', 'R', 'Y', 'W', 'C'] ,
   'HBW': ['T', 'T', 'R', 'S', 'I', 'I', 'P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'C', 'L', 'F'] ,
   'HBV': ['T', 'T', 'T', 'R', 'S', 'R', 'I', 'I', 'M', 'P', 'P', 'P', 'R', 'R', 'R', 'L', 'L', 'L', 'S', 'S', 'S', 'C', 'W', 'L', 'F', 'L'] ,
   'HRG': ['K', 'R', 'Q', 'R', 'W'] ,
   'HBR': ['T', 'T', 'R', 'R', 'I', 'M', 'P', 'P', 'R', 'R', 'L', 'L', 'S', 'S', 'W', 'L', 'L'] ,
   'YDN': ['Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'NNN': ['G', 'G', 'G', 'G', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'A', 'A', 'A', 'A', 'R', 'R', 'S', 'S', 'K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'T', 'T', 'T', 'T', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S', 'R', 'R', 'R', 'R', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'P', 'P', 'P', 'P'] ,
   'NNM': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'C', 'Y', 'L', 'F', 'S', 'S', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P'] ,
   'YDM': ['Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'C', 'L', 'F'] ,
   'NNK': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'R', 'S', 'K', 'N', 'M', 'I', 'T', 'T', 'W', 'C', 'Y', 'L', 'F', 'S', 'S', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P'] ,
   'YDK': ['Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'W', 'C', 'L', 'F'] ,
   'YDH': ['Q', 'H', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'Y', 'C', 'C', 'L', 'F', 'F'] ,
   'NNH': ['G', 'G', 'G', 'E', 'D', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'R', 'S', 'S', 'K', 'N', 'N', 'I', 'I', 'I', 'T', 'T', 'T', 'C', 'C', 'Y', 'Y', 'L', 'F', 'F', 'S', 'S', 'S', 'R', 'R', 'R', 'Q', 'H', 'H', 'L', 'L', 'L', 'P', 'P', 'P'] ,
   'HKR': ['R', 'R', 'I', 'M', 'R', 'R', 'L', 'L', 'W', 'L', 'L'] ,
   'YDG': ['Q', 'R', 'L', 'W', 'L'] ,
   'YDD': ['Q', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L', 'Y', 'W', 'C', 'L', 'L', 'F'] ,
   'NND': ['G', 'G', 'G', 'E', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'R', 'R', 'S', 'K', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'W', 'C', 'Y', 'L', 'L', 'F', 'S', 'S', 'S', 'R', 'R', 'R', 'Q', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P'] ,
   'HKV': ['R', 'S', 'R', 'I', 'I', 'M', 'R', 'R', 'R', 'L', 'L', 'L', 'C', 'W', 'L', 'F', 'L'] ,
   'NNB': ['G', 'G', 'G', 'D', 'E', 'D', 'V', 'V', 'V', 'A', 'A', 'A', 'S', 'R', 'S', 'N', 'K', 'N', 'I', 'M', 'I', 'T', 'T', 'T', 'C', 'W', 'C', 'Y', 'Y', 'F', 'L', 'F', 'S', 'S', 'S', 'R', 'R', 'R', 'H', 'Q', 'H', 'L', 'L', 'L', 'P', 'P', 'P'] ,
   'KHV': ['E', 'D', 'E', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'S', 'S', 'S', 'L', 'F', 'L'] ,
   'KHW': ['E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'KHH': ['E', 'D', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'L', 'F', 'F'] ,
   'HKH': ['R', 'S', 'S', 'I', 'I', 'I', 'R', 'R', 'R', 'L', 'L', 'L', 'C', 'C', 'L', 'F', 'F'] ,
   'KHK': ['E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'HKN': ['R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'KHM': ['E', 'D', 'A', 'A', 'V', 'V', 'Y', 'S', 'S', 'L', 'F'] ,
   'KHN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'V', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'S', 'L', 'L', 'F', 'F'] ,
   'HKM': ['R', 'S', 'I', 'I', 'R', 'R', 'L', 'L', 'C', 'L', 'F'] ,
   'NNW': ['G', 'G', 'E', 'D', 'V', 'V', 'A', 'A', 'R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'C', 'Y', 'L', 'F', 'S', 'S', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P'] ,
   'NNV': ['G', 'G', 'G', 'E', 'D', 'E', 'V', 'V', 'V', 'A', 'A', 'A', 'R', 'S', 'R', 'K', 'N', 'K', 'I', 'I', 'M', 'T', 'T', 'T', 'C', 'W', 'Y', 'L', 'F', 'L', 'S', 'S', 'S', 'R', 'R', 'R', 'Q', 'H', 'Q', 'L', 'L', 'L', 'P', 'P', 'P'] ,
   'KHB': ['D', 'E', 'D', 'A', 'A', 'A', 'V', 'V', 'V', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'HRB': ['N', 'K', 'N', 'S', 'R', 'S', 'H', 'Q', 'H', 'R', 'R', 'R', 'Y', 'Y', 'C', 'W', 'C'] ,
   'NNS': ['G', 'G', 'D', 'E', 'V', 'V', 'A', 'A', 'S', 'R', 'N', 'K', 'I', 'M', 'T', 'T', 'C', 'W', 'Y', 'F', 'L', 'S', 'S', 'R', 'R', 'H', 'Q', 'L', 'L', 'P', 'P'] ,
   'NNR': ['G', 'G', 'E', 'E', 'V', 'V', 'A', 'A', 'R', 'R', 'K', 'K', 'I', 'M', 'T', 'T', 'W', 'L', 'L', 'S', 'S', 'R', 'R', 'Q', 'Q', 'L', 'L', 'P', 'P'] ,
   'HKD': ['R', 'R', 'S', 'I', 'M', 'I', 'R', 'R', 'R', 'L', 'L', 'L', 'W', 'C', 'L', 'L', 'F'] ,
   'KHG': ['E', 'A', 'V', 'S', 'L'] ,
   'YVV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'YVW': ['Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C'] ,
   'YVR': ['Q', 'Q', 'P', 'P', 'R', 'R', 'S', 'S', 'W'] ,
   'YVS': ['H', 'Q', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C', 'W'] ,
   'HNM': ['R', 'S', 'K', 'N', 'I', 'I', 'T', 'T', 'R', 'R', 'Q', 'H', 'L', 'L', 'P', 'P', 'C', 'Y', 'L', 'F', 'S', 'S'] ,
   'YVD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'YVG': ['Q', 'P', 'R', 'S', 'W'] ,
   'YVA': ['Q', 'P', 'R', 'S'] ,
   'YVB': ['H', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'YVM': ['Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'C'] ,
   'YVN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'HNN': ['R', 'R', 'S', 'S', 'K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'T', 'T', 'T', 'T', 'R', 'R', 'R', 'R', 'Q', 'Q', 'H', 'H', 'L', 'L', 'L', 'L', 'P', 'P', 'P', 'P', 'W', 'C', 'C', 'Y', 'Y', 'L', 'L', 'F', 'F', 'S', 'S', 'S', 'S'] ,
   'YVH': ['Q', 'H', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'YVK': ['Q', 'H', 'P', 'P', 'R', 'R', 'Y', 'S', 'S', 'W', 'C'] ,
   'BVS': ['H', 'Q', 'P', 'P', 'R', 'R', 'D', 'E', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C', 'W'] ,
   'BVR': ['Q', 'Q', 'P', 'P', 'R', 'R', 'E', 'E', 'A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'KVD': ['E', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'KVB': ['D', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'BVV': ['Q', 'H', 'Q', 'P', 'P', 'P', 'R', 'R', 'R', 'E', 'D', 'E', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'KVA': ['E', 'A', 'G', 'S'] ,
   'KVN': ['E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'KVM': ['E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'HNS': ['S', 'R', 'N', 'K', 'I', 'M', 'T', 'T', 'R', 'R', 'H', 'Q', 'L', 'L', 'P', 'P', 'C', 'W', 'Y', 'F', 'L', 'S', 'S'] ,
   'KVH': ['E', 'D', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'KVV': ['E', 'D', 'E', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'KVW': ['E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'BVA': ['Q', 'P', 'R', 'E', 'A', 'G', 'S'] ,
   'KVR': ['E', 'E', 'A', 'A', 'G', 'G', 'S', 'S', 'W'] ,
   'KVS': ['D', 'E', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C', 'W'] ,
   'BVD': ['Q', 'Q', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'E', 'E', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'BVK': ['Q', 'H', 'P', 'P', 'R', 'R', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'W', 'C'] ,
   'TMD': ['Y', 'S', 'S', 'S'] ,
   'BVH': ['Q', 'H', 'H', 'P', 'P', 'P', 'R', 'R', 'R', 'E', 'D', 'D', 'A', 'A', 'A', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'BVN': ['Q', 'Q', 'H', 'H', 'P', 'P', 'P', 'P', 'R', 'R', 'R', 'R', 'E', 'E', 'D', 'D', 'A', 'A', 'A', 'A', 'G', 'G', 'G', 'G', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'BVM': ['Q', 'H', 'P', 'P', 'R', 'R', 'E', 'D', 'A', 'A', 'G', 'G', 'Y', 'S', 'S', 'C'] ,
   'TMG': ['S'] ,
   'WVR': ['K', 'K', 'T', 'T', 'R', 'R', 'S', 'S', 'W'] ,
   'WVS': ['N', 'K', 'T', 'T', 'S', 'R', 'Y', 'S', 'S', 'C', 'W'] ,
   'WVV': ['K', 'N', 'K', 'T', 'T', 'T', 'R', 'S', 'R', 'Y', 'S', 'S', 'S', 'C', 'W'] ,
   'WVW': ['K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'C'] ,
   'WVK': ['K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'W', 'C'] ,
   'WVH': ['K', 'N', 'N', 'T', 'T', 'T', 'R', 'S', 'S', 'Y', 'Y', 'S', 'S', 'S', 'C', 'C'] ,
   'WVN': ['K', 'K', 'N', 'N', 'T', 'T', 'T', 'T', 'R', 'R', 'S', 'S', 'Y', 'Y', 'S', 'S', 'S', 'S', 'W', 'C', 'C'] ,
   'WVM': ['K', 'N', 'T', 'T', 'R', 'S', 'Y', 'S', 'S', 'C'] ,
   'WVB': ['N', 'K', 'N', 'T', 'T', 'T', 'S', 'R', 'S', 'Y', 'Y', 'S', 'S', 'S', 'C', 'W', 'C'] ,
   'WVA': ['K', 'T', 'R', 'S'] ,
   'WVG': ['K', 'T', 'R', 'S', 'W'] ,
   'WVD': ['K', 'K', 'N', 'T', 'T', 'T', 'R', 'R', 'S', 'Y', 'S', 'S', 'S', 'W', 'C'] ,
   'TRH': ['Y', 'Y', 'C', 'C'] ,
   'TRK': ['Y', 'W', 'C'] ,
   'TRM': ['Y', 'C'] ,
   'TRN': ['Y', 'Y', 'W', 'C', 'C'] ,
   'BDM': ['Q', 'H', 'R', 'R', 'L', 'L', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'TRB': ['Y', 'Y', 'C', 'W', 'C'] ,
   'TRD': ['Y', 'W', 'C'] ,
   'BDK': ['Q', 'H', 'R', 'R', 'L', 'L', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'W', 'C', 'L', 'F'] ,
   'BDW': ['Q', 'H', 'R', 'R', 'L', 'L', 'E', 'D', 'G', 'G', 'V', 'V', 'Y', 'C', 'L', 'F'] ,
   'BDV': ['Q', 'H', 'Q', 'R', 'R', 'R', 'L', 'L', 'L', 'E', 'D', 'E', 'G', 'G', 'G', 'V', 'V', 'V', 'Y', 'C', 'W', 'L', 'F', 'L'] ,
   'BDS': ['H', 'Q', 'R', 'R', 'L', 'L', 'D', 'E', 'G', 'G', 'V', 'V', 'Y', 'C', 'W', 'F', 'L'] ,
   'BDR': ['Q', 'Q', 'R', 'R', 'L', 'L', 'E', 'E', 'G', 'G', 'V', 'V', 'W', 'L', 'L'] ,
   'TRS': ['Y', 'C', 'W'] ,
   'TRR': ['W'] ,
   'TRW': ['Y', 'C'] ,
   'TRV': ['Y', 'C', 'W'] ,
   'HAA': ['K', 'Q'] ,
   'HWD': ['K', 'K', 'N', 'I', 'M', 'I', 'Q', 'Q', 'H', 'L', 'L', 'L', 'Y', 'L', 'L', 'F'] ,
   'NGD': ['G', 'G', 'G', 'R', 'R', 'S', 'W', 'C', 'R', 'R', 'R'] ,
   'KDG': ['E', 'G', 'V', 'W', 'L'] ,
   'KSV': ['A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'W'] ,
   'TVS': ['Y', 'S', 'S', 'C', 'W'] ,
   'HWA': ['K', 'I', 'Q', 'L', 'L'] ,
   'DWH': ['K', 'N', 'N', 'I', 'I', 'I', 'E', 'D', 'D', 'V', 'V', 'V', 'Y', 'Y', 'L', 'F', 'F'] ,
   'HDR': ['K', 'K', 'R', 'R', 'I', 'M', 'Q', 'Q', 'R', 'R', 'L', 'L', 'W', 'L', 'L'] ,
   'YSA': ['P', 'R', 'S'] ,
   'NKA': ['G', 'V', 'R', 'I', 'L', 'R', 'L'] ,
   'HAD': ['K', 'K', 'N', 'Q', 'Q', 'H', 'Y'] ,
   'KGR': ['G', 'G', 'W'] ,
   'TVD': ['Y', 'S', 'S', 'S', 'W', 'C'] ,
   'HHW': ['K', 'N', 'T', 'T', 'I', 'I', 'Q', 'H', 'P', 'P', 'L', 'L', 'Y', 'S', 'S', 'L', 'F'] ,
   'TVG': ['S', 'W'] ,
   'YGA': ['R'] ,
   'TVA': ['S'] ,
   'NGW': ['G', 'G', 'R', 'S', 'C', 'R', 'R'] ,
   'KDS': ['D', 'E', 'G', 'G', 'V', 'V', 'Y', 'C', 'W', 'F', 'L'] ,
   'HDA': ['K', 'R', 'I', 'Q', 'R', 'L', 'L'] ,
   'HDN': ['K', 'K', 'N', 'N', 'R', 'R', 'S', 'S', 'M', 'I', 'I', 'I', 'Q', 'Q', 'H', 'H', 'R', 'R', 'R', 'R', 'L', 'L', 'L', 'L', 'Y', 'Y', 'W', 'C', 'C', 'L', 'L', 'F', 'F'] ,
   'DAD': ['K', 'K', 'N', 'E', 'E', 'D', 'Y'] ,
   'KGA': ['G'] ,
   'DAG': ['K', 'E'] ,
   'DAA': ['K', 'E'] ,
   'DAB': ['N', 'K', 'N', 'D', 'E', 'D', 'Y', 'Y'] ,
   'HHB': ['N', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'H', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'Y', 'S', 'S', 'S', 'F', 'L', 'F'] ,
   'HDK': ['K', 'N', 'R', 'S', 'M', 'I', 'Q', 'H', 'R', 'R', 'L', 'L', 'Y', 'W', 'C', 'L', 'F'] ,
   'DAN': ['K', 'K', 'N', 'N', 'E', 'E', 'D', 'D', 'Y', 'Y'] ,
   'DAH': ['K', 'N', 'N', 'E', 'D', 'D', 'Y', 'Y'] ,
   'HHA': ['K', 'T', 'I', 'Q', 'P', 'L', 'S', 'L'] ,
   'KSH': ['A', 'A', 'A', 'G', 'G', 'G', 'S', 'S', 'S', 'C', 'C'] ,
   'NDA': ['E', 'G', 'V', 'K', 'R', 'I', 'L', 'Q', 'R', 'L'] ,
   'DAV': ['K', 'N', 'K', 'E', 'D', 'E', 'Y'] ,
   'DAW': ['K', 'N', 'E', 'D', 'Y'] ,
   'NDW': ['E', 'D', 'G', 'G', 'V', 'V', 'K', 'N', 'R', 'S', 'I', 'I', 'Y', 'C', 'L', 'F', 'Q', 'H', 'R', 'R', 'L', 'L'] ,
   'DAR': ['K', 'K', 'E', 'E'] ,
   'DAS': ['N', 'K', 'D', 'E', 'Y'] ,
   'KGD': ['G', 'G', 'G', 'W', 'C'] ,
   'DWR': ['K', 'K', 'I', 'M', 'E', 'E', 'V', 'V', 'L', 'L'] ,
   'DWS': ['N', 'K', 'I', 'M', 'D', 'E', 'V', 'V', 'Y', 'F', 'L'] ,
   'DWV': ['K', 'N', 'K', 'I', 'I', 'M', 'E', 'D', 'E', 'V', 'V', 'V', 'Y', 'L', 'F', 'L'] ,
   'DWW': ['K', 'N', 'I', 'I', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'KRV': ['E', 'D', 'E', 'G', 'G', 'G', 'Y', 'C', 'W'] ,
   'HHD': ['K', 'K', 'N', 'T', 'T', 'T', 'I', 'M', 'I', 'Q', 'Q', 'H', 'P', 'P', 'P', 'L', 'L', 'L', 'Y', 'S', 'S', 'S', 'L', 'L', 'F'] ,
   'NDD': ['E', 'E', 'D', 'G', 'G', 'G', 'V', 'V', 'V', 'K', 'K', 'N', 'R', 'R', 'S', 'I', 'M', 'I', 'Y', 'W', 'C', 'L', 'L', 'F', 'Q', 'Q', 'H', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'DWB': ['N', 'K', 'N', 'I', 'M', 'I', 'D', 'E', 'D', 'V', 'V', 'V', 'Y', 'Y', 'F', 'L', 'F'] ,
   'NDV': ['E', 'D', 'E', 'G', 'G', 'G', 'V', 'V', 'V', 'K', 'N', 'K', 'R', 'S', 'R', 'I', 'I', 'M', 'Y', 'C', 'W', 'L', 'F', 'L', 'Q', 'H', 'Q', 'R', 'R', 'R', 'L', 'L', 'L'] ,
   'DWA': ['K', 'I', 'E', 'V', 'L'] ,
   'DWG': ['K', 'M', 'E', 'V', 'L'] ,
   'DWD': ['K', 'K', 'N', 'I', 'M', 'I', 'E', 'E', 'D', 'V', 'V', 'V', 'Y', 'L', 'L', 'F'] ,
   'DWK': ['K', 'N', 'M', 'I', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'YRS': ['H', 'Q', 'R', 'R', 'Y', 'C', 'W'] ,
   'DWN': ['K', 'K', 'N', 'N', 'M', 'I', 'I', 'I', 'E', 'E', 'D', 'D', 'V', 'V', 'V', 'V', 'Y', 'Y', 'L', 'L', 'F', 'F'] ,
   'DWM': ['K', 'N', 'I', 'I', 'E', 'D', 'V', 'V', 'Y', 'L', 'F'] ,
   'WDW': ['K', 'N', 'R', 'S', 'I', 'I', 'Y', 'C', 'L', 'F'] ,
   'BMH': ['Q', 'H', 'H', 'P', 'P', 'P', 'E', 'D', 'D', 'A', 'A', 'A', 'Y', 'Y', 'S', 'S', 'S']}
   
               
   std_nt = CodonTable.unambiguous_dna_by_name["Standard"]  # create normal codon table object
   nonstd = IUPACData.ambiguous_dna_values                  # create list of all ambiguous DNA values, includes normal bases
   aa_trans = []
   
   for i in range(0,len(s),3):
      codon = s.tostring()[i:i+3]
#      print "codon=",codon
      if stop_alt.has_key(codon):
#         print "\t in stop_alt: ",stop_alt[codon]
         aa_trans.append(stop_alt[codon])
      elif codon == '---': 
#         print "\t is ---"
         aa_trans.append('-')
      elif codon_table.has_key(codon):
#         print "\t in codon_table: ",codon_table[codon]
         aa_trans.append(codon_table[codon])
      elif std_nt.forward_table.has_key(codon):
#         print "\t is normal codon"
         aa_trans.append(list(std_nt.forward_table[codon]))
      else: 
         print "was not seen ",codon
         # For each ambiguous (or not) codon, returns list of all posible translations
#         try:
#            if codon == '---': aa_trans.append(['-'])
#            else:
#               aa = CodonTable.list_possible_proteins(codon,std_nt.forward_table,nonstd) 
#               aa_trans.append(aa)
#         except KeyError, TransError: # see above comment for stop_alt & TRA
#            pass
   return aa_trans
   
def countPermutations(aa_trans):
   perm = 1
   num_ambig=0
   for x in aa_trans:
      perm = perm * len(x)
      if len(x) > 1: num_ambig = num_ambig+1
   print "Sequence generates ",perm," permutations from ",num_ambig," ambiguities..."
   return perm
   
   # Now have a list of format [ [a], [b,c], [d], [e,f,g], etc ]
   # this function creates a list of tuples containing all possible ordered combinations like
   # [(a,b,d,e), (a,b,d,f), (a,b,d,g), (a,c,d,e), (a,c,d,f), (a,c,d,g)]



def generateAmbigCodonTable():
      bases = ['T','C','A','G']
      ambig_bases = ['R','Y','S','W','K','M','D','H','B','V','N']
      codons = [a+b+c for a in bases for b in bases for c in bases]
      amino_acids = "F F L L S S S S Y Y stop stop C C stop W L L L L P P P P H H Q Q R R R R I I I M T T T T N N K K S S R R V V V V A A A A D D E E G G G G".split(' ')
      codon_table = dict(zip(codons, amino_acids))
      nonstd = IUPACData.ambiguous_dna_values                  # create list of all ambiguous DNA values, includes normal bases
      std_nt = CodonTable.unambiguous_dna_by_name["Standard"]  # create normal codon table object
      
      all_ambig_trip = []
      for s in list(itertools.product(*[ambig_bases,ambig_bases,ambig_bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[bases,ambig_bases,ambig_bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[ambig_bases,bases,ambig_bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[ambig_bases,ambig_bases,bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[ambig_bases,bases,bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[bases,ambig_bases,bases])): all_ambig_trip.append(s)
      for s in list(itertools.product(*[bases,bases,ambig_bases])): all_ambig_trip.append(s)
      
      k = codon_table.keys()
      k.sort()
      
      stop_set = {}  # store final results of ambig codon and all possible translations minus the potential stop
      ambig_set = {} # store all possible translations of everthing else that does not code for stops
      for trip in all_ambig_trip:
         stop_seen = False
         ambig = "".join(trip)
         stop_set[ambig] = []
         ambig_set[ambig] = []
         for codon in list(itertools.product(*[ list(nonstd[trip[0]]), list(nonstd[trip[1]]), list(nonstd[trip[2]]) ])):  # translate ambig into all possible real combinations
            codon = "".join(codon)
            aa = codon_table[codon]
            if aa == 'stop': 
               stop_seen = True
            else: 
               stop_set[ambig].append(aa)
               ambig_set[ambig].append(aa)
         if stop_seen is False: del(stop_set[ambig])
         if stop_seen is True: del(ambig_set[ambig])
      
      return ambig_set



def getX4ByCodon(aa_trans,pssm):
   prot =""
   pos = 0
   final_score=0
   for x in aa_trans:
      if len(x) == 1: 
         if x[0] != '-':
#            print "pos ",pos," x=",x
            final_score = final_score + pssm[pos][x[0]]
         prot = prot+x[0]
         
      else:
         c = {}
         for y in x:
            score = pssm[pos][y]
            c[score] = y
         best = c.keys()
         best.sort()
#         print "pos ",pos," y=",c[best[len(best)-1]]
         prot = prot + c[best[len(best)-1]]
         final_score = final_score + best[len(best)-1]
      pos = pos + 1
   return (prot,final_score)




###################################
# Load X4R5 PSSM matrix from file #
###################################
def loadPSSM(filename):
   f = open(filename,"r")
   ids = {'A':0, 'C':0, 'E':0, 'D':0, 'G':0, 'F':0, 'I':0, 'H':0, 'K':0, 'M':0, 'L':0, 'N':0, 'Q':0, 'P':0, 'S':0, 'R':0, 'T':0, 'W':0, 'V':0, 'Y':0}
   pssm = []
   for x in range(0,35):
      pssm.append(ids.copy())
   
   for row in f:
      vals = row.split()
      if vals[0] != "#" and vals[0] != "1":
         for idx in range(0,35):
            pssm[idx][vals[0]] = float(vals[idx+1])
            
   f.close()
   
   return pssm



####################################################################################
# Takes all possible biased sequences and the pssm matrix and scores each sequence #
# Returns the most x4-like (lowest score). We are intentionally choosing to only   #
# take the first occurance if more than one sequence has the same score            #
####################################################################################
def generatePSSMScore(seqs,pssm):
   x4scores = {}
   for s in seqs: 
      c = 0
      score = 0
      err = False
      try:
         for i in list(s):
            score = score + pssm[c][i]
            c = c + 1
      except IndexError, IndErr:
   #      print "*** Index Error: i=",i," c=",c," len(s)=",len(s)," s=",s," len(seqs)=",len(seqs)
         err = True
         pass
      if not x4scores.has_key(score):  # if a sequence has a duplicate score, we are choosing to ignore it and just take the first occurance
         x4scores[score] = s
   if err == True: print "**** PSSM Index Error ****"
   results = x4scores.keys()
   results.sort()
   pssm_score = results[len(results)-1]  # Take the largest score as most X4-like
   x4seq = x4scores[pssm_score]
   return (x4seq,pssm_score)


##########################################################
# Takes aa sequence and compresses or pads it to be 35aa #
##########################################################
def makeLength35(dna):
   seqid='foo'
   nt = dna.seq.tostring()
   clustalw2_bin = "/usr/local/bin/clustalw2"
   #consensus = 'CTRPNNNTRKSIHIGPGRAFYATGDIIGDIRQAHC'    # Consensus of all mgrm 35mers @ 30% occurance
   consensus = 'CTRPNNNTRKSIHIGPGRAFYATGEIIGDIRQAHC'    # Subtype B consensus
   f = open(seqid+".clustal.seq",'w')
   f.write(">C\n" + consensus + "\n>Q\n" + dna.seq.translate().tostring().replace('J','X') )  # Have to add the replace function to compensate for weird biopython 'bug'
   f.close()
   
   # Create command line request for clustalw
   ##########################################
   err = open("clustalw2_error_log","w")
   process = subprocess.Popen( [ clustalw2_bin, "-infile="+ seqid +".clustal.seq", "-outfile="+ seqid +".aln" ], stderr = err, stdout = err)
   process.wait()
   err.close()
   align = AlignIO.read(seqid+".aln",'clustal')
   summary_align = AlignInfo.SummaryInfo(align)
   seqs = { align[0].id : align[0].seq.tostring(), align[1].id : align[1].seq.tostring() }
   os.remove("clustalw2_error_log")
   
   # Look for insertions
   ###############################
   changes ={'ins':[],'del':[]}
   print seqs
   print "Original DNA:",dna.seq.tostring()
   if seqs['C'].find('-') != -1:                                                 # Look for insertions in query "Q" by looking for '-' in consensus "C"
      print "In insertion step"
      gapnum = seqs['C'].count('-')                                          # count num of gap chars
      gaplength = len(seqs['C'][seqs['C'].find('-'):seqs['C'].rfind('-')+1])    # measure length from first gap char to last gap char
      if gapnum != 0:                                                        # if we have an insertion event, gapnum will not be 0
         s = list(seqs['C'])                                                  # convert "C" sequence into a list
         indices = []                                                         # store list indices of '-' occurance
         flag='no'                                                            # are we in the middle of a gap?
         
         for idx,val in enumerate(s):                                             # idx = list index, val = list value
            if val =='-':
               if flag == 'no': indices.append(idx)
               flag = 'yes'
            elif val != '-' and flag =='yes':
               indices.append(idx-1)
               flag = 'no'
               
         z = list(seqs['Q'])                                                # convert "Q" sequence into a list
         d = list(nt)                                                       # Convert dna to list
         for idx in range(0,len(indices),2):                                  # loop through indices of gaps
            changes['ins'].append(str(indices[idx]+1)+":"+str(indices[idx+1]+1))
            for xidx in range(indices[idx],indices[idx+1]+1):                        # loop through length of insertion
               z[xidx]="|"                                                         # set each value in the insertion range to a 'throw-away' string
               d[xidx*3]="|"
               d[xidx*3+1]="|"
               d[xidx*3+2]="|"                                                       # for the dna as well   
         newseq = "".join(z)                                                # Join the list back into a string
         newseq = newseq.replace("|","")                                    # remove all throw-away chars
         newnt = "".join(d)
         newnt = newnt.replace("|","")
         return_dna = newnt
         seqs['Q'] = newseq
   else:
      print "in deletion step"
      gapnum = seqs['Q'].count('-')
      print "gapnum=",gapnum
      gaplength = len(seqs['Q'][seqs['Q'].find('-'):seqs['Q'].rfind('-')+1])
      print "gaplength=",gaplength
      if gapnum != 0:                                                        # if we have an deletion event, gapnum will not be 0
         s = list(seqs['Q'])                                                  # convert "C" sequence into a list
         indices = []                                                         # store list indices of '-' occurance
         flag='no'                                                            # are we in the middle of a gap?
         for idx,val in enumerate(s):                                             # idx = list index, val = list value
            if val =='-':
               if flag == 'no': indices.append(idx)
               flag = 'yes'
            elif val != '-' and flag =='yes':
               indices.append(idx-1)
               flag = 'no'
         if flag == 'yes': indices.append(idx)
         
         
         d = list(nt)                                                       # Convert dna to list
  #       for i,j in enumerate(d): print i," ",j
         print "gapnum:",gapnum," gaplen:",gaplength," indices:",indices      
         delcount = 0
         lastidx = range(0,len(indices),2)[len(range(0,len(indices),2))-1]   # get last value of what idx will be in case we need it
         for idx in range(0,len(indices),2):                                  # loop through indices of gaps
            changes['del'].append(str(indices[idx]+1)+":"+str(indices[idx+1]+1))
            print "changes ",changes
            for xidx in range(indices[idx],indices[idx+1]+1):                        # loop through length of insertion
               print "idx=",idx," xidx=",xidx,"3xidx=",xidx*3," delcount=",delcount, "(xidx-delcount)*3= ",(xidx-delcount)*3
               try:
                  d[(xidx-delcount)*3]= "---"+d[(xidx-delcount)*3]   
#                  d[xidx*3]= "---"+d[xidx*3]   
               except:
                  if idx == lastidx:
                     d.append("---")
               print "round ",delcount," ","".join(d)
               delcount += 1
         newnt = "".join(d)
         return_dna = newnt
      
      
   
   os.remove( seqid +".clustal.seq")                                                   # remove all temp files
   os.remove( seqid +".aln")
   os.remove( seqid +".clustal.dnd")
   print return_dna
   return (seqs['Q'],return_dna,changes)



def main():
   dna = SeqIO.to_dict(SeqIO.parse("varlen_test.seq","fasta",IUPAC.IUPACAmbiguousDNA()))
   results = {}
   counts = {}
   pssm_old = loadPSSM("x4r5_pssm_old.matrix")
   pssm_new = loadPSSM("x4r5_pssm.matrix")
   codon_table = generateAmbigCodonTable()
   
   for d in dna.keys():
      if len(dna[d].seq.translate().tostring()) == 35:
         aa_trans = generateProtFromAmbiguousDNA(dna[d].seq,codon_table)
         prot,score = getX4ByCodon(aa_trans,pssm_new)
         print "len was 35, final X4 prot: ",prot," score= ",score
      else:
         print "ID:",dna[d].id
         aa_trans = generateProtFromAmbiguousDNA(dna[d].seq,codon_table)
#         print "aa_trans:\n",aa_trans
         perm_count = countPermutations(aa_trans)
#         print "original prot:",dna[d].seq.translate().tostring()
         x4seqaa,x4seqnt,changes = makeLength35(dna[d])
#         print "x4seqaa= ",x4seqaa
#         print "orig DNA: ",dna[d].seq.tostring()
#         print "DNA: ",x4seqnt
         nt = SeqRecord(Seq(x4seqnt, IUPAC.IUPACAmbiguousDNA()))
         aa_trans2 = generateProtFromAmbiguousDNA(nt.seq,codon_table)
#         print "aa_trans2:\n",aa_trans2
         prot,score = getX4ByCodon(aa_trans2,pssm_new)
         print "final X4 prot:",prot," score = ",score," prot len=",len(prot)
         print "\n\n"



if __name__ == '__main__':
   main()

